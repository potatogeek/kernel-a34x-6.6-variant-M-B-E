/* SPDX-License-Identifier: BSD-2-Clause */
/*
 * Copyright (c) 2023 MediaTek Inc.
 */

//[File]            : wf_top_cfg_von.h
//[Revision time]   : Fri Oct 18 16:43:39 2024
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2024 Mediatek Incorportion. All rights reserved.

#ifndef __WF_TOP_CFG_VON_REGS_H__
#define __WF_TOP_CFG_VON_REGS_H__

#include "hal_common.h"

#ifdef __cplusplus
extern "C" {
#endif


//****************************************************************************
//
//                     WF_TOP_CFG_VON CR Definitions                     
//
//****************************************************************************

#define WF_TOP_CFG_VON_BASE                                    0x87002000u

#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR               (WF_TOP_CFG_VON_BASE + 0x000u) // 2000
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_1_ADDR               (WF_TOP_CFG_VON_BASE + 0x004u) // 2004
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR              (WF_TOP_CFG_VON_BASE + 0x100u) // 2100
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR            (WF_TOP_CFG_VON_BASE + 0x104u) // 2104
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR          (WF_TOP_CFG_VON_BASE + 0x118u) // 2118
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR          (WF_TOP_CFG_VON_BASE + 0x11Cu) // 211C
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR          (WF_TOP_CFG_VON_BASE + 0x200u) // 2200
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR          (WF_TOP_CFG_VON_BASE + 0x204u) // 2204
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_DBG_OUT_ADDR         (WF_TOP_CFG_VON_BASE + 0x800u) // 2800
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_DBG_OUT_ADDR        (WF_TOP_CFG_VON_BASE + 0x804u) // 2804
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_DBG_OUT_ADDR      (WF_TOP_CFG_VON_BASE + 0x808u) // 2808
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT_ADDR    (WF_TOP_CFG_VON_BASE + 0x81Cu) // 281C
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT_ADDR    (WF_TOP_CFG_VON_BASE + 0x820u) // 2820
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT_ADDR    (WF_TOP_CFG_VON_BASE + 0x830u) // 2830
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT_ADDR    (WF_TOP_CFG_VON_BASE + 0x834u) // 2834
#define WF_TOP_CFG_VON_IRQ_MASK_0_ADDR                         (WF_TOP_CFG_VON_BASE + 0x900u) // 2900
#define WF_TOP_CFG_VON_IRQ_MASK_1_ADDR                         (WF_TOP_CFG_VON_BASE + 0x904u) // 2904
#define WF_TOP_CFG_VON_IRQ_STATUS_0_ADDR                       (WF_TOP_CFG_VON_BASE + 0x910u) // 2910
#define WF_TOP_CFG_VON_IRQ_STATUS_1_ADDR                       (WF_TOP_CFG_VON_BASE + 0x914u) // 2914
#define WF_TOP_CFG_VON_EINT_MASK_0_ADDR                        (WF_TOP_CFG_VON_BASE + 0x920u) // 2920
#define WF_TOP_CFG_VON_EINT_MASK_1_ADDR                        (WF_TOP_CFG_VON_BASE + 0x924u) // 2924
#define WF_TOP_CFG_VON_EINT_STATUS_0_ADDR                      (WF_TOP_CFG_VON_BASE + 0x930u) // 2930
#define WF_TOP_CFG_VON_EINT_STATUS_1_ADDR                      (WF_TOP_CFG_VON_BASE + 0x934u) // 2934
#define WF_TOP_CFG_VON_VON_APB_DECODER_CTL_0_ADDR              (WF_TOP_CFG_VON_BASE + 0xA30u) // 2A30
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ADDR             (WF_TOP_CFG_VON_BASE + 0xA34u) // 2A34
#define WF_TOP_CFG_VON_VON_VDNR_BUS_0_ADDR                     (WF_TOP_CFG_VON_BASE + 0xA38u) // 2A38
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_ADDR                     (WF_TOP_CFG_VON_BASE + 0xA3Cu) // 2A3C
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_0_ADDR          (WF_TOP_CFG_VON_BASE + 0xB00u) // 2B00
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_1_ADDR          (WF_TOP_CFG_VON_BASE + 0xB04u) // 2B04
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_2_ADDR          (WF_TOP_CFG_VON_BASE + 0xB08u) // 2B08
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_3_ADDR          (WF_TOP_CFG_VON_BASE + 0xB0Cu) // 2B0C
#define WF_TOP_CFG_VON_WF_SLEEP_WA_IRQ_CONTROL_0_ADDR          (WF_TOP_CFG_VON_BASE + 0xB10u) // 2B10
#define WF_TOP_CFG_VON_WF_SLEEP_WA_IRQ_CONTROL_1_ADDR          (WF_TOP_CFG_VON_BASE + 0xB14u) // 2B14
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_0_ADDR            (WF_TOP_CFG_VON_BASE + 0xC00u) // 2C00
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_1_ADDR            (WF_TOP_CFG_VON_BASE + 0xC04u) // 2C04
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_ADDR            (WF_TOP_CFG_VON_BASE + 0xC08u) // 2C08
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_3_ADDR            (WF_TOP_CFG_VON_BASE + 0xC0Cu) // 2C0C
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_ADDR                      (WF_TOP_CFG_VON_BASE + 0xC10u) // 2C10
#define WF_TOP_CFG_VON_VON_CMDBT_MEM_ADDR_PREFIX_ADDR          (WF_TOP_CFG_VON_BASE + 0xC14u) // 2C14
#define WF_TOP_CFG_VON_VON_CMDBT_MEM_ADDR_PREFIX_1_ADDR        (WF_TOP_CFG_VON_BASE + 0xC18u) // 2C18
#define WF_TOP_CFG_VON_VON_CMDBT_FETCH_START_ADDR_BK_ADDR      (WF_TOP_CFG_VON_BASE + 0xC1Cu) // 2C1C
#define WF_TOP_CFG_VON_VON_CMDBT_FETCH_START_ADDR_RS_ADDR      (WF_TOP_CFG_VON_BASE + 0xC20u) // 2C20
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_MCU_ADDR        (WF_TOP_CFG_VON_BASE + 0xC30u) // 2C30
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_UMAC_ADDR       (WF_TOP_CFG_VON_BASE + 0xC34u) // 2C34
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_LMAC_ADDR       (WF_TOP_CFG_VON_BASE + 0xC38u) // 2C38
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_LIT_ADDR        (WF_TOP_CFG_VON_BASE + 0xC3Cu) // 2C3C
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_PHY_ADDR        (WF_TOP_CFG_VON_BASE + 0xC40u) // 2C40
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN0_PHY_ADDR    (WF_TOP_CFG_VON_BASE + 0xC44u) // 2C44
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN1_PHY_ADDR    (WF_TOP_CFG_VON_BASE + 0xC48u) // 2C48
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN2_PHY_ADDR    (WF_TOP_CFG_VON_BASE + 0xC4Cu) // 2C4C
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN3_PHY_ADDR    (WF_TOP_CFG_VON_BASE + 0xC50u) // 2C50
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_MCU_ADDR    (WF_TOP_CFG_VON_BASE + 0xC60u) // 2C60
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC_ADDR   (WF_TOP_CFG_VON_BASE + 0xC64u) // 2C64
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC_ADDR   (WF_TOP_CFG_VON_BASE + 0xC68u) // 2C68
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_LIT_ADDR    (WF_TOP_CFG_VON_BASE + 0xC6Cu) // 2C6C
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_PHY_ADDR    (WF_TOP_CFG_VON_BASE + 0xC70u) // 2C70
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY_ADDR (WF_TOP_CFG_VON_BASE + 0xC74u) // 2C74
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY_ADDR (WF_TOP_CFG_VON_BASE + 0xC78u) // 2C78
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY_ADDR (WF_TOP_CFG_VON_BASE + 0xC7Cu) // 2C7C
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY_ADDR (WF_TOP_CFG_VON_BASE + 0xC80u) // 2C80
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_MCU_ADDR           (WF_TOP_CFG_VON_BASE + 0xC90u) // 2C90
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_UMAC_ADDR          (WF_TOP_CFG_VON_BASE + 0xC94u) // 2C94
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_LMAC_ADDR          (WF_TOP_CFG_VON_BASE + 0xC98u) // 2C98
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_LIT_ADDR           (WF_TOP_CFG_VON_BASE + 0xC9Cu) // 2C9C
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_PHY_ADDR           (WF_TOP_CFG_VON_BASE + 0xCA0u) // 2CA0
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN0_PHY_ADDR       (WF_TOP_CFG_VON_BASE + 0xCA4u) // 2CA4
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN1_PHY_ADDR       (WF_TOP_CFG_VON_BASE + 0xCA8u) // 2CA8
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN2_PHY_ADDR       (WF_TOP_CFG_VON_BASE + 0xCACu) // 2CAC
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN3_PHY_ADDR       (WF_TOP_CFG_VON_BASE + 0xCB0u) // 2CB0
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_WRAP_DBG_SEL_ADDR      (WF_TOP_CFG_VON_BASE + 0xCC0u) // 2CC0
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG_ADDR     (WF_TOP_CFG_VON_BASE + 0xCC4u) // 2CC4
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_ADDR                      (WF_TOP_CFG_VON_BASE + 0xCD0u) // 2CD0
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR                (WF_TOP_CFG_VON_BASE + 0xCD4u) // 2CD4
#define WF_TOP_CFG_VON_SW_CMDBT_MANUAL_MODE_SIGNAL_LIT_ADDR    (WF_TOP_CFG_VON_BASE + 0xCECu) // 2CEC
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_ADDR         (WF_TOP_CFG_VON_BASE + 0xD00u) // 2D00
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_ADDR         (WF_TOP_CFG_VON_BASE + 0xD04u) // 2D04
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR         (WF_TOP_CFG_VON_BASE + 0xD08u) // 2D08
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_VON_DBG_FLAG_ADDR      (WF_TOP_CFG_VON_BASE + 0xD0Cu) // 2D0C
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_MCU_DBG_FLAG_ADDR      (WF_TOP_CFG_VON_BASE + 0xD10u) // 2D10
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_UMAC_DBG_FLAG_ADDR     (WF_TOP_CFG_VON_BASE + 0xD14u) // 2D14
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_LMAC_DBG_FLAG_ADDR     (WF_TOP_CFG_VON_BASE + 0xD18u) // 2D18
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_LIT_DBG_FLAG_ADDR      (WF_TOP_CFG_VON_BASE + 0xD1Cu) // 2D1C
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_FLAG_ADDR (WF_TOP_CFG_VON_BASE + 0xD20u) // 2D20
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_FLAG_ADDR (WF_TOP_CFG_VON_BASE + 0xD24u) // 2D24
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_FLAG_ADDR (WF_TOP_CFG_VON_BASE + 0xD28u) // 2D28
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_FLAG_ADDR (WF_TOP_CFG_VON_BASE + 0xD2Cu) // 2D2C
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_FLAG_ADDR (WF_TOP_CFG_VON_BASE + 0xD30u) // 2D30
#define WF_TOP_CFG_VON_DBG_FLAG_CTRL_0_ADDR                    (WF_TOP_CFG_VON_BASE + 0xF00u) // 2F00
#define WF_TOP_CFG_VON_DBG_FLAG_0_ADDR                         (WF_TOP_CFG_VON_BASE + 0xF04u) // 2F04




/* =====================================================================================

  ---WFSYS_MCU_SLP_CTRL_0 (0x87002000 + 0x000u)---

    CR_WFSYS_MCU_LEGACY_SLEEP_EN[0] - (RW) MCU legacy sleep enable. When cr_wfsys_mcu_legacy_sleep_en=1, MCU slp_ctrl FSM will "not" enter MCU_MTCMOS_OFF state that is MCU mtcmos will keep on and reset will not be asserted.
                                     0: dsleep
                                     1: legacy sleep
    CR_FORCE_SKIP_WFSYS_MCU_MEM_PON_STATE[1] - (RW) To skip MCU_MEMORY_ON state check mem_pon=1 criteria. If set to “1” then sleep controller will still send wfsys_mcu_pon=1 to RGU and goto MCU_DIS_SLPPROT_P1 state. This is for debug usage, normal mode should always keep “0”
                                     0: not skip
                                     1: skip
    CR_FORCE_SKIP_WFSYS_MCU_RESTORE_STATE[2] - (RW) To skip MCU_RESTORE state. If set to “1” then sleep controller will “not” sent wfsys_mcu_restore_req=1 to cmdbt controller that is we will skip restore behavior and goto MCU_DIS_SLPPROT_P2 state. This is for debug usage, normal mode should always keep “0”
                                     0: not skip
                                     1: skip
    CR_FORCE_SKIP_WFSYS_MCU_BACKUP_STATE[3] - (RW) To skip MCU_BACKUP state. If set to “1” then sleep controller will “not” sent wfsys_mcu_backup_req=1 to cmdbt controller that is we will skip backup behavior and goto MCU_EN_SLPPROT_P1 state. This is for debug usage, normal mode should always keep “0”
                                     0: not skip
                                     1: skip
    CR_MASK_WFSYS_MCU_SLPPROT_P1_RDY0_CHK[4] - (RW) To mask check slpprot_rdy=0 at MCU_DIS_SLPPROT_P1 state. Default we “don't” check slpprot_rdy=0 when disabling slpprot because slpprot might be enable by another power domain.
                                     0: need to check slpprot_rdy=0
                                     1: don't need to check slpprot_rdy=0
    CR_MASK_WFSYS_MCU_SLPPROT_P1_RDY1_CHK[5] - (RW) To mask check slpprot_rdy=1 at MCU_EN_SLPPROT_P1 state. Default we “must” check slpprot_rdy=1 when enabling slpprot because slpprot must be enabled before power down.
                                     0: need to check slpprot_rdy=1
                                     1: don't need to check slpprot_rdy=1
    CR_MASK_WFSYS_MCU_SLPPROT_P2_RDY0_CHK[6] - (RW) To mask check slpprot_rdy=0 at MCU_DIS_SLPPROT_P2 state. Default we “don't” check slpprot_rdy=0 when disabling slpprot because slpprot might be enable by another power domain.
                                     0: need to check slpprot_rdy=0
                                     1: don't need to check slpprot_rdy=0
    CR_MASK_WFSYS_MCU_SLPPROT_P2_RDY1_CHK[7] - (RW) To mask check slpprot_rdy=1 at MCU_EN_SLPPROT_P2 state. Default we “must” check slpprot_rdy=1 when enabling slpprot because slpprot must be enabled before power down.
                                     0: need to check slpprot_rdy=1
                                     1: don't need to check slpprot_rdy=1
    CR_MCU_SLP_CTRL_STATE_ABNORMAL_EN[8] - (RW) Decide whether to jump to MCU_ABNORMAL state when mcu_slp_ctrl_state_timeout=1. MCU_ABNORMAL state will force on mtcmos, memory, give up rs/bk and disable slpprot.
                                     0: will “not” goto MCU_ABNORMAL state when mcu_slp_ctrl_state_timeout=1
                                     1: will goto MCU_ABNORMAL state when mcu_slp_ctrl_state_timeout=1
    CR_MCU_SLP_CTRL_STATE_TIMEOUT_EN[9] - (RW) To enable timeout function for mcu sleep controller. When timeout is enabled, if FSM stays at MCU_MEMORY_ON/ MCU_RESTORE/ MCU_DIS_SLPPROT_P1/ MCU_DIS_SLPPROT_p2/ MCU_EN_SLPPROT_P1/ MCU_EN_SLPPROT_P2/ MCU_BACKUP/ MCU_MEMORY_OFF state longer than cr_mcu_slp_ctrl_state_timeout_limit * T @f32k, mcu_slp_ctrl_state_timeout will trigger.
                                     0: disable
                                     1: enable
    CR_MCU_SLP_CTRL_STATE_TIMEOUT_CLR[10] - (RW) To clear mcu_slp_ctrl_state_timeout, sw needs to write 1 clear then  write 0 de-clear.
                                     0: not clear
                                     1: clear
    CR_MCU_SLP_CTRL_STATE_TIMEOUT_LIMIT[16..11] - (RW) Timeout threshold for mcu sleep controller.
                                     Range 0~63 (@f32k)
    MCU_SLP_CTRL_STATE_TIMEOUT[17] - (RO) Timeout status of mcu sleep controller
                                     0: no timeout
                                     1: timeout
    RESERVED18[31..18]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_MCU_SLP_CTRL_STATE_TIMEOUT_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_MCU_SLP_CTRL_STATE_TIMEOUT_MASK 0x00020000u                // MCU_SLP_CTRL_STATE_TIMEOUT[17]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_MCU_SLP_CTRL_STATE_TIMEOUT_SHFT 17u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_TIMEOUT_LIMIT_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_TIMEOUT_LIMIT_MASK 0x0001F800u                // CR_MCU_SLP_CTRL_STATE_TIMEOUT_LIMIT[16..11]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_TIMEOUT_LIMIT_SHFT 11u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_TIMEOUT_CLR_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_TIMEOUT_CLR_MASK 0x00000400u                // CR_MCU_SLP_CTRL_STATE_TIMEOUT_CLR[10]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_TIMEOUT_CLR_SHFT 10u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_TIMEOUT_EN_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_TIMEOUT_EN_MASK 0x00000200u                // CR_MCU_SLP_CTRL_STATE_TIMEOUT_EN[9]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_TIMEOUT_EN_SHFT 9u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_ABNORMAL_EN_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_ABNORMAL_EN_MASK 0x00000100u                // CR_MCU_SLP_CTRL_STATE_ABNORMAL_EN[8]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MCU_SLP_CTRL_STATE_ABNORMAL_EN_SHFT 8u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P2_RDY1_CHK_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P2_RDY1_CHK_MASK 0x00000080u                // CR_MASK_WFSYS_MCU_SLPPROT_P2_RDY1_CHK[7]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P2_RDY1_CHK_SHFT 7u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P2_RDY0_CHK_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P2_RDY0_CHK_MASK 0x00000040u                // CR_MASK_WFSYS_MCU_SLPPROT_P2_RDY0_CHK[6]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P2_RDY0_CHK_SHFT 6u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P1_RDY1_CHK_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P1_RDY1_CHK_MASK 0x00000020u                // CR_MASK_WFSYS_MCU_SLPPROT_P1_RDY1_CHK[5]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P1_RDY1_CHK_SHFT 5u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P1_RDY0_CHK_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P1_RDY0_CHK_MASK 0x00000010u                // CR_MASK_WFSYS_MCU_SLPPROT_P1_RDY0_CHK[4]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_MASK_WFSYS_MCU_SLPPROT_P1_RDY0_CHK_SHFT 4u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_MCU_BACKUP_STATE_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_MCU_BACKUP_STATE_MASK 0x00000008u                // CR_FORCE_SKIP_WFSYS_MCU_BACKUP_STATE[3]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_MCU_BACKUP_STATE_SHFT 3u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_MCU_RESTORE_STATE_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_MCU_RESTORE_STATE_MASK 0x00000004u                // CR_FORCE_SKIP_WFSYS_MCU_RESTORE_STATE[2]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_MCU_RESTORE_STATE_SHFT 2u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_MCU_MEM_PON_STATE_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_MCU_MEM_PON_STATE_MASK 0x00000002u                // CR_FORCE_SKIP_WFSYS_MCU_MEM_PON_STATE[1]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_MCU_MEM_PON_STATE_SHFT 1u
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_WFSYS_MCU_LEGACY_SLEEP_EN_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_WFSYS_MCU_LEGACY_SLEEP_EN_MASK 0x00000001u                // CR_WFSYS_MCU_LEGACY_SLEEP_EN[0]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_0_CR_WFSYS_MCU_LEGACY_SLEEP_EN_SHFT 0u

/* =====================================================================================

  ---WFSYS_MCU_SLP_CTRL_1 (0x87002000 + 0x004u)---

    MCU_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[15..0] - (RO) Snapshot of mcu sleep controller when timeout happens
                                     [15]=mcu_slp_ctrl_state[3]
                                     [14]=mcu_slp_ctrl_state[2]
                                     [13]=mcu_slp_ctrl_state[1]
                                     [12]=mcu_slp_ctrl_state[0]
                                     [11]=wfsys_mcu_mem_pon_done
                                     [10]=wfsys_mcu_mem_pdn_done
                                     [9] =wfsys_mcu_slpprot_p1_rdy
                                     [8] =wfsys_mcu_slpprot_p2_rdy
                                     [7] =wfsys_mcu_restore_done
                                     [6] =wfsys_mcu_backup_done
                                     [5] =wfsys_mcu_pwr_on
                                     [4] =wfsys_mcu_1st_pon_flag
                                     [3] =wfsys_mcu_hw_subsys_pwr_on_state
                                     [2] =wfsys_mcu_hw_subsys_pwr_pdn_state
                                     [1] =mcu_slp_ctrl_state_timeout_sync_clk
                                     [0] =mcu_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_1_MCU_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_1_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_1_MCU_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_MASK 0x0000FFFFu                // MCU_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[15..0]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_1_MCU_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_SHFT 0u

/* =====================================================================================

  ---WFSYS_UMAC_SLP_CTRL_0 (0x87002000 + 0x100u)---

    CR_WFSYS_UMAC_LEGACY_SLEEP_EN[0] - (RW) RADIO legacy sleep enable. When cr_wfsys_radio_legacy_sleep_en=1, RADIO slp_ctrl FSM will "not" enter RADIO_MTCMOS_OFF state that is RADIO mtcmos will keep on and reset will not be asserted.
                                     0: dsleep
                                     1: legacy sleep
    CR_WFSYS_UMAC_MEM_PREON_EN[1] - (RW) To enable memory preon feature for radio. Memory preon feature is to early queue memory arbiter at mtcmos on stage. It is a fast wakeup option design for ALPL2.5 requirement
                                     0: disable
                                     1: enable
    CR_FORCE_SKIP_WFSYS_UMAC_MEM_PON_STATE[2] - (RW) To skip RADIO_MEMORY_ON state check mem_pon=1 criteria. If set to “1” then sleep controller will still send wfsys_radio_pon=1 to RGU and goto RADIO_DIS_SLPPROT state. This is for debug usage, normal mode should always keep “0”
                                     0: not skip
                                     1: skip
    CR_MASK_WFSYS_UMAC_SLPPROT_RDY0_CHK[3] - (RW) To mask check slpprot_rdy=0 at RADIO_DIS_SLPPROT_P1 state. Default we “don't” check slpprot_rdy=0 when disabling slpprot because slpprot might be enable by another power domain.
                                     0: need to check slpprot_rdy=0
                                     1: don't need to check slpprot_rdy=0
    CR_MASK_WFSYS_UMAC_SLPPROT_RDY1_CHK[4] - (RW) To mask check slpprot_rdy=1 at RADIO_EN_SLPPROT_P1 state. Default we “must” check slpprot_rdy=1 when enabling slpprot because slpprot must be enabled before power down.
                                     0: need to check slpprot_rdy=1
                                     1: don't need to check slpprot_rdy=1
    CR_UMAC_SLP_CTRL_STATE_ABNORMAL_EN[5] - (RW) Decide whether to jump to RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1. RADIO_ABNORMAL state will force on mtcmos, memory and disable slpprot.
                                     0: will “not” goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
                                     1: will goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
    CR_UMAC_SLP_CTRL_STATE_TIMEOUT_EN[6] - (RW) To enable timeout function for radio sleep controller. When timeout is enabled, if FSM stays at RADIO_MEMORY_ON/ RADIO_DIS_SLPPROT/ RADIO_EN_SLPPROT/ RADIO_MEMORY_OFF state longer than cr_radio_slp_ctrl_state_timeout_limit * T @f32k, radio_slp_ctrl_state_timeout will trigger.
                                     0: disable
                                     1: enable
    CR_UMAC_SLP_CTRL_STATE_TIMEOUT_CLR[7] - (RW) To clear radio_slp_ctrl_state_timeout, sw needs to write 1 clear then write 0 de-clear.
                                     0: not clear
                                     1: clear
    CR_UMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8] - (RW) Timeout threshold for radio sleep controller.
                                     Range 0~63 (@f32k)
    UMAC_SLP_CTRL_STATE_TIMEOUT[14] - (RO) Timeout status of radio sleep controller
                                     0: no timeout
                                     1: timeout
    RESERVED15[15]               - (RO) Reserved bits
    UMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16] - (RO) Snapshot of mcu sleep controller when timeout happens
                                     [15]=radio_slp_ctrl_state[3]
                                     [14]=radio_slp_ctrl_state[2]
                                     [13]=radio_slp_ctrl_state[1]
                                     [12]=radio_slp_ctrl_state[0]
                                     [11]=radio_slp_ctrl_state_next[3]
                                     [10]=radio_slp_ctrl_state_next[2]
                                     [9] =radio_slp_ctrl_state_next[1]
                                     [8] =radio_slp_ctrl_state_next[0]
                                     [7] =wfsys_radio_slpprot_rdy
                                     [6] =wfsys_radio_mem_pon_done
                                     [5] =wfsys_radio_mem_pdn_done
                                     [4] =wfsys_radio_pwr_on
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_UMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_UMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_MASK 0xFFFF0000u                // UMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_UMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_SHFT 16u
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_UMAC_SLP_CTRL_STATE_TIMEOUT_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_UMAC_SLP_CTRL_STATE_TIMEOUT_MASK 0x00004000u                // UMAC_SLP_CTRL_STATE_TIMEOUT[14]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_UMAC_SLP_CTRL_STATE_TIMEOUT_SHFT 14u
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT_MASK 0x00003F00u                // CR_UMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT_SHFT 8u
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_TIMEOUT_CLR_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_TIMEOUT_CLR_MASK 0x00000080u                // CR_UMAC_SLP_CTRL_STATE_TIMEOUT_CLR[7]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_TIMEOUT_CLR_SHFT 7u
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_TIMEOUT_EN_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_TIMEOUT_EN_MASK 0x00000040u                // CR_UMAC_SLP_CTRL_STATE_TIMEOUT_EN[6]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_TIMEOUT_EN_SHFT 6u
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_ABNORMAL_EN_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_ABNORMAL_EN_MASK 0x00000020u                // CR_UMAC_SLP_CTRL_STATE_ABNORMAL_EN[5]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_UMAC_SLP_CTRL_STATE_ABNORMAL_EN_SHFT 5u
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_MASK_WFSYS_UMAC_SLPPROT_RDY1_CHK_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_MASK_WFSYS_UMAC_SLPPROT_RDY1_CHK_MASK 0x00000010u                // CR_MASK_WFSYS_UMAC_SLPPROT_RDY1_CHK[4]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_MASK_WFSYS_UMAC_SLPPROT_RDY1_CHK_SHFT 4u
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_MASK_WFSYS_UMAC_SLPPROT_RDY0_CHK_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_MASK_WFSYS_UMAC_SLPPROT_RDY0_CHK_MASK 0x00000008u                // CR_MASK_WFSYS_UMAC_SLPPROT_RDY0_CHK[3]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_MASK_WFSYS_UMAC_SLPPROT_RDY0_CHK_SHFT 3u
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_UMAC_MEM_PON_STATE_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_UMAC_MEM_PON_STATE_MASK 0x00000004u                // CR_FORCE_SKIP_WFSYS_UMAC_MEM_PON_STATE[2]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_UMAC_MEM_PON_STATE_SHFT 2u
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_WFSYS_UMAC_MEM_PREON_EN_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_WFSYS_UMAC_MEM_PREON_EN_MASK 0x00000002u                // CR_WFSYS_UMAC_MEM_PREON_EN[1]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_WFSYS_UMAC_MEM_PREON_EN_SHFT 1u
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_WFSYS_UMAC_LEGACY_SLEEP_EN_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_WFSYS_UMAC_LEGACY_SLEEP_EN_MASK 0x00000001u                // CR_WFSYS_UMAC_LEGACY_SLEEP_EN[0]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_0_CR_WFSYS_UMAC_LEGACY_SLEEP_EN_SHFT 0u

/* =====================================================================================

  ---WFSYS_LMACON_SLP_CTRL_0 (0x87002000 + 0x104u)---

    CR_WFSYS_LMACON_LEGACY_SLEEP_EN[0] - (RW) RADIO legacy sleep enable. When cr_wfsys_radio_legacy_sleep_en=1, RADIO slp_ctrl FSM will "not" enter RADIO_MTCMOS_OFF state that is RADIO mtcmos will keep on and reset will not be asserted.
                                     0: dsleep
                                     1: legacy sleep
    CR_WFSYS_LMACON_MEM_PREON_EN[1] - (RW) To enable memory preon feature for radio. Memory preon feature is to early queue memory arbiter at mtcmos on stage. It is a fast wakeup option design for ALPL2.5 requirement
                                     0: disable
                                     1: enable
    CR_FORCE_SKIP_WFSYS_LMACON_MEM_PON_STATE[2] - (RW) To skip RADIO_MEMORY_ON state check mem_pon=1 criteria. If set to “1” then sleep controller will still send wfsys_radio_pon=1 to RGU and goto RADIO_DIS_SLPPROT state. This is for debug usage, normal mode should always keep “0”
                                     0: not skip
                                     1: skip
    CR_MASK_WFSYS_LMACON_SLPPROT_RDY0_CHK[3] - (RW) To mask check slpprot_rdy=0 at RADIO_DIS_SLPPROT_P1 state. Default we “don't” check slpprot_rdy=0 when disabling slpprot because slpprot might be enable by another power domain.
                                     0: need to check slpprot_rdy=0
                                     1: don't need to check slpprot_rdy=0
    CR_MASK_WFSYS_LMACON_SLPPROT_RDY1_CHK[4] - (RW) To mask check slpprot_rdy=1 at RADIO_EN_SLPPROT_P1 state. Default we “must” check slpprot_rdy=1 when enabling slpprot because slpprot must be enabled before power down.
                                     0: need to check slpprot_rdy=1
                                     1: don't need to check slpprot_rdy=1
    CR_LMACON_SLP_CTRL_STATE_ABNORMAL_EN[5] - (RW) Decide whether to jump to RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1. RADIO_ABNORMAL state will force on mtcmos, memory and disable slpprot.
                                     0: will “not” goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
                                     1: will goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
    CR_LMACON_SLP_CTRL_STATE_TIMEOUT_EN[6] - (RW) To enable timeout function for radio sleep controller. When timeout is enabled, if FSM stays at RADIO_MEMORY_ON/ RADIO_DIS_SLPPROT/ RADIO_EN_SLPPROT/ RADIO_MEMORY_OFF state longer than cr_radio_slp_ctrl_state_timeout_limit * T @f32k, radio_slp_ctrl_state_timeout will trigger.
                                     0: disable
                                     1: enable
    CR_LMACON_SLP_CTRL_STATE_TIMEOUT_CLR[7] - (RW) To clear radio_slp_ctrl_state_timeout, sw needs to write 1 clear then write 0 de-clear.
                                     0: not clear
                                     1: clear
    CR_LMACON_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8] - (RW) Timeout threshold for radio sleep controller.
                                     Range 0~63 (@f32k)
    LMACON_SLP_CTRL_STATE_TIMEOUT[14] - (RO) Timeout status of radio sleep controller
                                     0: no timeout
                                     1: timeout
    RESERVED15[15]               - (RO) Reserved bits
    LMACON_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16] - (RO) Snapshot of mcu sleep controller when timeout happens
                                     [15]=radio_slp_ctrl_state[3]
                                     [14]=radio_slp_ctrl_state[2]
                                     [13]=radio_slp_ctrl_state[1]
                                     [12]=radio_slp_ctrl_state[0]
                                     [11]=radio_slp_ctrl_state_next[3]
                                     [10]=radio_slp_ctrl_state_next[2]
                                     [9] =radio_slp_ctrl_state_next[1]
                                     [8] =radio_slp_ctrl_state_next[0]
                                     [7] =wfsys_radio_slpprot_rdy
                                     [6] =wfsys_radio_mem_pon_done
                                     [5] =wfsys_radio_mem_pdn_done
                                     [4] =wfsys_radio_pwr_on
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_LMACON_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_LMACON_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_MASK 0xFFFF0000u                // LMACON_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_LMACON_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_SHFT 16u
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_LMACON_SLP_CTRL_STATE_TIMEOUT_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_LMACON_SLP_CTRL_STATE_TIMEOUT_MASK 0x00004000u                // LMACON_SLP_CTRL_STATE_TIMEOUT[14]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_LMACON_SLP_CTRL_STATE_TIMEOUT_SHFT 14u
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_TIMEOUT_LIMIT_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_TIMEOUT_LIMIT_MASK 0x00003F00u                // CR_LMACON_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_TIMEOUT_LIMIT_SHFT 8u
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_TIMEOUT_CLR_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_TIMEOUT_CLR_MASK 0x00000080u                // CR_LMACON_SLP_CTRL_STATE_TIMEOUT_CLR[7]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_TIMEOUT_CLR_SHFT 7u
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_TIMEOUT_EN_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_TIMEOUT_EN_MASK 0x00000040u                // CR_LMACON_SLP_CTRL_STATE_TIMEOUT_EN[6]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_TIMEOUT_EN_SHFT 6u
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_ABNORMAL_EN_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_ABNORMAL_EN_MASK 0x00000020u                // CR_LMACON_SLP_CTRL_STATE_ABNORMAL_EN[5]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_LMACON_SLP_CTRL_STATE_ABNORMAL_EN_SHFT 5u
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_MASK_WFSYS_LMACON_SLPPROT_RDY1_CHK_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_MASK_WFSYS_LMACON_SLPPROT_RDY1_CHK_MASK 0x00000010u                // CR_MASK_WFSYS_LMACON_SLPPROT_RDY1_CHK[4]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_MASK_WFSYS_LMACON_SLPPROT_RDY1_CHK_SHFT 4u
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_MASK_WFSYS_LMACON_SLPPROT_RDY0_CHK_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_MASK_WFSYS_LMACON_SLPPROT_RDY0_CHK_MASK 0x00000008u                // CR_MASK_WFSYS_LMACON_SLPPROT_RDY0_CHK[3]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_MASK_WFSYS_LMACON_SLPPROT_RDY0_CHK_SHFT 3u
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_LMACON_MEM_PON_STATE_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_LMACON_MEM_PON_STATE_MASK 0x00000004u                // CR_FORCE_SKIP_WFSYS_LMACON_MEM_PON_STATE[2]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_LMACON_MEM_PON_STATE_SHFT 2u
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_WFSYS_LMACON_MEM_PREON_EN_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_WFSYS_LMACON_MEM_PREON_EN_MASK 0x00000002u                // CR_WFSYS_LMACON_MEM_PREON_EN[1]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_WFSYS_LMACON_MEM_PREON_EN_SHFT 1u
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_WFSYS_LMACON_LEGACY_SLEEP_EN_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_WFSYS_LMACON_LEGACY_SLEEP_EN_MASK 0x00000001u                // CR_WFSYS_LMACON_LEGACY_SLEEP_EN[0]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_0_CR_WFSYS_LMACON_LEGACY_SLEEP_EN_SHFT 0u

/* =====================================================================================

  ---WFSYS_BN0_LMAC_SLP_CTRL_0 (0x87002000 + 0x118u)---

    CR_WFSYS_BN0_LMAC_LEGACY_SLEEP_EN[0] - (RW) RADIO legacy sleep enable. When cr_wfsys_radio_legacy_sleep_en=1, RADIO slp_ctrl FSM will "not" enter RADIO_MTCMOS_OFF state that is RADIO mtcmos will keep on and reset will not be asserted.
                                     0: dsleep
                                     1: legacy sleep
    CR_WFSYS_BN0_LMAC_MEM_PREON_EN[1] - (RW) To enable memory preon feature for radio. Memory preon feature is to early queue memory arbiter at mtcmos on stage. It is a fast wakeup option design for ALPL2.5 requirement
                                     0: disable
                                     1: enable
    CR_FORCE_SKIP_WFSYS_BN0_LMAC_MEM_PON_STATE[2] - (RW) To skip RADIO_MEMORY_ON state check mem_pon=1 criteria. If set to “1” then sleep controller will still send wfsys_radio_pon=1 to RGU and goto RADIO_DIS_SLPPROT state. This is for debug usage, normal mode should always keep “0”
                                     0: not skip
                                     1: skip
    CR_MASK_WFSYS_BN0_LMAC_SLPPROT_RDY0_CHK[3] - (RW) To mask check slpprot_rdy=0 at RADIO_DIS_SLPPROT_P1 state. Default we “don't” check slpprot_rdy=0 when disabling slpprot because slpprot might be enable by another power domain.
                                     0: need to check slpprot_rdy=0
                                     1: don't need to check slpprot_rdy=0
    CR_MASK_WFSYS_BN0_LMAC_SLPPROT_RDY1_CHK[4] - (RW) To mask check slpprot_rdy=1 at RADIO_EN_SLPPROT_P1 state. Default we “must” check slpprot_rdy=1 when enabling slpprot because slpprot must be enabled before power down.
                                     0: need to check slpprot_rdy=1
                                     1: don't need to check slpprot_rdy=1
    CR_BN0_LMAC_SLP_CTRL_STATE_ABNORMAL_EN[5] - (RW) Decide whether to jump to RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1. RADIO_ABNORMAL state will force on mtcmos, memory and disable slpprot.
                                     0: will “not” goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
                                     1: will goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
    CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_EN[6] - (RW) To enable timeout function for radio sleep controller. When timeout is enabled, if FSM stays at RADIO_MEMORY_ON/ RADIO_DIS_SLPPROT/ RADIO_EN_SLPPROT/ RADIO_MEMORY_OFF state longer than cr_radio_slp_ctrl_state_timeout_limit * T @f32k, radio_slp_ctrl_state_timeout will trigger.
                                     0: disable
                                     1: enable
    CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_CLR[7] - (RW) To clear radio_slp_ctrl_state_timeout, sw needs to write 1 clear then write 0 de-clear.
                                     0: not clear
                                     1: clear
    CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8] - (RW) Timeout threshold for radio sleep controller.
                                     Range 0~63 (@f32k)
    BN0_LMAC_SLP_CTRL_STATE_TIMEOUT[14] - (RO) Timeout status of radio sleep controller
                                     0: no timeout
                                     1: timeout
    RESERVED15[15]               - (RO) Reserved bits
    BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16] - (RO) Snapshot of mcu sleep controller when timeout happens
                                     [15]=radio_slp_ctrl_state[3]
                                     [14]=radio_slp_ctrl_state[2]
                                     [13]=radio_slp_ctrl_state[1]
                                     [12]=radio_slp_ctrl_state[0]
                                     [11]=radio_slp_ctrl_state_next[3]
                                     [10]=radio_slp_ctrl_state_next[2]
                                     [9] =radio_slp_ctrl_state_next[1]
                                     [8] =radio_slp_ctrl_state_next[0]
                                     [7] =wfsys_radio_slpprot_rdy
                                     [6] =wfsys_radio_mem_pon_done
                                     [5] =wfsys_radio_mem_pdn_done
                                     [4] =wfsys_radio_pwr_on
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_MASK 0xFFFF0000u                // BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_SHFT 16u
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_MASK 0x00004000u                // BN0_LMAC_SLP_CTRL_STATE_TIMEOUT[14]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_SHFT 14u
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT_MASK 0x00003F00u                // CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT_SHFT 8u
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_CLR_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_CLR_MASK 0x00000080u                // CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_CLR[7]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_CLR_SHFT 7u
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_EN_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_EN_MASK 0x00000040u                // CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_EN[6]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_TIMEOUT_EN_SHFT 6u
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_ABNORMAL_EN_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_ABNORMAL_EN_MASK 0x00000020u                // CR_BN0_LMAC_SLP_CTRL_STATE_ABNORMAL_EN[5]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_BN0_LMAC_SLP_CTRL_STATE_ABNORMAL_EN_SHFT 5u
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN0_LMAC_SLPPROT_RDY1_CHK_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN0_LMAC_SLPPROT_RDY1_CHK_MASK 0x00000010u                // CR_MASK_WFSYS_BN0_LMAC_SLPPROT_RDY1_CHK[4]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN0_LMAC_SLPPROT_RDY1_CHK_SHFT 4u
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN0_LMAC_SLPPROT_RDY0_CHK_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN0_LMAC_SLPPROT_RDY0_CHK_MASK 0x00000008u                // CR_MASK_WFSYS_BN0_LMAC_SLPPROT_RDY0_CHK[3]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN0_LMAC_SLPPROT_RDY0_CHK_SHFT 3u
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_BN0_LMAC_MEM_PON_STATE_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_BN0_LMAC_MEM_PON_STATE_MASK 0x00000004u                // CR_FORCE_SKIP_WFSYS_BN0_LMAC_MEM_PON_STATE[2]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_BN0_LMAC_MEM_PON_STATE_SHFT 2u
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_WFSYS_BN0_LMAC_MEM_PREON_EN_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_WFSYS_BN0_LMAC_MEM_PREON_EN_MASK 0x00000002u                // CR_WFSYS_BN0_LMAC_MEM_PREON_EN[1]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_WFSYS_BN0_LMAC_MEM_PREON_EN_SHFT 1u
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_WFSYS_BN0_LMAC_LEGACY_SLEEP_EN_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_WFSYS_BN0_LMAC_LEGACY_SLEEP_EN_MASK 0x00000001u                // CR_WFSYS_BN0_LMAC_LEGACY_SLEEP_EN[0]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_0_CR_WFSYS_BN0_LMAC_LEGACY_SLEEP_EN_SHFT 0u

/* =====================================================================================

  ---WFSYS_BN1_LMAC_SLP_CTRL_0 (0x87002000 + 0x11Cu)---

    CR_WFSYS_BN1_LMAC_LEGACY_SLEEP_EN[0] - (RW) RADIO legacy sleep enable. When cr_wfsys_radio_legacy_sleep_en=1, RADIO slp_ctrl FSM will "not" enter RADIO_MTCMOS_OFF state that is RADIO mtcmos will keep on and reset will not be asserted.
                                     0: dsleep
                                     1: legacy sleep
    CR_WFSYS_BN1_LMAC_MEM_PREON_EN[1] - (RW) To enable memory preon feature for radio. Memory preon feature is to early queue memory arbiter at mtcmos on stage. It is a fast wakeup option design for ALPL2.5 requirement
                                     0: disable
                                     1: enable
    CR_FORCE_SKIP_WFSYS_BN1_LMAC_MEM_PON_STATE[2] - (RW) To skip RADIO_MEMORY_ON state check mem_pon=1 criteria. If set to “1” then sleep controller will still send wfsys_radio_pon=1 to RGU and goto RADIO_DIS_SLPPROT state. This is for debug usage, normal mode should always keep “0”
                                     0: not skip
                                     1: skip
    CR_MASK_WFSYS_BN1_LMAC_SLPPROT_RDY0_CHK[3] - (RW) To mask check slpprot_rdy=0 at RADIO_DIS_SLPPROT_P1 state. Default we “don't” check slpprot_rdy=0 when disabling slpprot because slpprot might be enable by another power domain.
                                     0: need to check slpprot_rdy=0
                                     1: don't need to check slpprot_rdy=0
    CR_MASK_WFSYS_BN1_LMAC_SLPPROT_RDY1_CHK[4] - (RW) To mask check slpprot_rdy=1 at RADIO_EN_SLPPROT_P1 state. Default we “must” check slpprot_rdy=1 when enabling slpprot because slpprot must be enabled before power down.
                                     0: need to check slpprot_rdy=1
                                     1: don't need to check slpprot_rdy=1
    CR_BN1_LMAC_SLP_CTRL_STATE_ABNORMAL_EN[5] - (RW) Decide whether to jump to RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1. RADIO_ABNORMAL state will force on mtcmos, memory and disable slpprot.
                                     0: will “not” goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
                                     1: will goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
    CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_EN[6] - (RW) To enable timeout function for radio sleep controller. When timeout is enabled, if FSM stays at RADIO_MEMORY_ON/ RADIO_DIS_SLPPROT/ RADIO_EN_SLPPROT/ RADIO_MEMORY_OFF state longer than cr_radio_slp_ctrl_state_timeout_limit * T @f32k, radio_slp_ctrl_state_timeout will trigger.
                                     0: disable
                                     1: enable
    CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_CLR[7] - (RW) To clear radio_slp_ctrl_state_timeout, sw needs to write 1 clear then write 0 de-clear.
                                     0: not clear
                                     1: clear
    CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8] - (RW) Timeout threshold for radio sleep controller.
                                     Range 0~63 (@f32k)
    BN1_LMAC_SLP_CTRL_STATE_TIMEOUT[14] - (RO) Timeout status of radio sleep controller
                                     0: no timeout
                                     1: timeout
    RESERVED15[15]               - (RO) Reserved bits
    BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16] - (RO) Snapshot of mcu sleep controller when timeout happens
                                     [15]=radio_slp_ctrl_state[3]
                                     [14]=radio_slp_ctrl_state[2]
                                     [13]=radio_slp_ctrl_state[1]
                                     [12]=radio_slp_ctrl_state[0]
                                     [11]=radio_slp_ctrl_state_next[3]
                                     [10]=radio_slp_ctrl_state_next[2]
                                     [9] =radio_slp_ctrl_state_next[1]
                                     [8] =radio_slp_ctrl_state_next[0]
                                     [7] =wfsys_radio_slpprot_rdy
                                     [6] =wfsys_radio_mem_pon_done
                                     [5] =wfsys_radio_mem_pdn_done
                                     [4] =wfsys_radio_pwr_on
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_MASK 0xFFFF0000u                // BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_SHFT 16u
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_MASK 0x00004000u                // BN1_LMAC_SLP_CTRL_STATE_TIMEOUT[14]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_SHFT 14u
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT_MASK 0x00003F00u                // CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_LIMIT_SHFT 8u
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_CLR_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_CLR_MASK 0x00000080u                // CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_CLR[7]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_CLR_SHFT 7u
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_EN_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_EN_MASK 0x00000040u                // CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_EN[6]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_TIMEOUT_EN_SHFT 6u
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_ABNORMAL_EN_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_ABNORMAL_EN_MASK 0x00000020u                // CR_BN1_LMAC_SLP_CTRL_STATE_ABNORMAL_EN[5]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_BN1_LMAC_SLP_CTRL_STATE_ABNORMAL_EN_SHFT 5u
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN1_LMAC_SLPPROT_RDY1_CHK_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN1_LMAC_SLPPROT_RDY1_CHK_MASK 0x00000010u                // CR_MASK_WFSYS_BN1_LMAC_SLPPROT_RDY1_CHK[4]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN1_LMAC_SLPPROT_RDY1_CHK_SHFT 4u
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN1_LMAC_SLPPROT_RDY0_CHK_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN1_LMAC_SLPPROT_RDY0_CHK_MASK 0x00000008u                // CR_MASK_WFSYS_BN1_LMAC_SLPPROT_RDY0_CHK[3]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_MASK_WFSYS_BN1_LMAC_SLPPROT_RDY0_CHK_SHFT 3u
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_BN1_LMAC_MEM_PON_STATE_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_BN1_LMAC_MEM_PON_STATE_MASK 0x00000004u                // CR_FORCE_SKIP_WFSYS_BN1_LMAC_MEM_PON_STATE[2]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_BN1_LMAC_MEM_PON_STATE_SHFT 2u
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_WFSYS_BN1_LMAC_MEM_PREON_EN_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_WFSYS_BN1_LMAC_MEM_PREON_EN_MASK 0x00000002u                // CR_WFSYS_BN1_LMAC_MEM_PREON_EN[1]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_WFSYS_BN1_LMAC_MEM_PREON_EN_SHFT 1u
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_WFSYS_BN1_LMAC_LEGACY_SLEEP_EN_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_WFSYS_BN1_LMAC_LEGACY_SLEEP_EN_MASK 0x00000001u                // CR_WFSYS_BN1_LMAC_LEGACY_SLEEP_EN[0]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_0_CR_WFSYS_BN1_LMAC_LEGACY_SLEEP_EN_SHFT 0u

/* =====================================================================================

  ---WFSYS_WF_PHY_0_SLP_CTRL_0 (0x87002000 + 0x200u)---

    CR_WFSYS_WF_PHY_0_LEGACY_SLEEP_EN[0] - (RW) RADIO legacy sleep enable. When cr_wfsys_radio_legacy_sleep_en=1, RADIO slp_ctrl FSM will "not" enter RADIO_MTCMOS_OFF state that is RADIO mtcmos will keep on and reset will not be asserted.
                                     0: dsleep
                                     1: legacy sleep
    CR_WFSYS_WF_PHY_0_MEM_PREON_EN[1] - (RW) To enable memory preon feature for radio. Memory preon feature is to early queue memory arbiter at mtcmos on stage. It is a fast wakeup option design for ALPL2.5 requirement
                                     0: disable
                                     1: enable
    CR_FORCE_SKIP_WFSYS_WF_PHY_0_MEM_PON_STATE[2] - (RW) To skip RADIO_MEMORY_ON state check mem_pon=1 criteria. If set to “1” then sleep controller will still send wfsys_radio_pon=1 to RGU and goto RADIO_DIS_SLPPROT state. This is for debug usage, normal mode should always keep “0”
                                     0: not skip
                                     1: skip
    CR_MASK_WFSYS_WF_PHY_0_SLPPROT_RDY0_CHK[3] - (RW) To mask check slpprot_rdy=0 at RADIO_DIS_SLPPROT_P1 state. Default we “don't” check slpprot_rdy=0 when disabling slpprot because slpprot might be enable by another power domain.
                                     0: need to check slpprot_rdy=0
                                     1: don't need to check slpprot_rdy=0
    CR_MASK_WFSYS_WF_PHY_0_SLPPROT_RDY1_CHK[4] - (RW) To mask check slpprot_rdy=1 at RADIO_EN_SLPPROT_P1 state. Default we “must” check slpprot_rdy=1 when enabling slpprot because slpprot must be enabled before power down.
                                     0: need to check slpprot_rdy=1
                                     1: don't need to check slpprot_rdy=1
    CR_WF_PHY_0_SLP_CTRL_STATE_ABNORMAL_EN[5] - (RW) Decide whether to jump to RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1. RADIO_ABNORMAL state will force on mtcmos, memory and disable slpprot.
                                     0: will “not” goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
                                     1: will goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
    CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_EN[6] - (RW) To enable timeout function for radio sleep controller. When timeout is enabled, if FSM stays at RADIO_MEMORY_ON/ RADIO_DIS_SLPPROT/ RADIO_EN_SLPPROT/ RADIO_MEMORY_OFF state longer than cr_radio_slp_ctrl_state_timeout_limit * T @f32k, radio_slp_ctrl_state_timeout will trigger.
                                     0: disable
                                     1: enable
    CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_CLR[7] - (RW) To clear radio_slp_ctrl_state_timeout, sw needs to write 1 clear then write 0 de-clear.
                                     0: not clear
                                     1: clear
    CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8] - (RW) Timeout threshold for radio sleep controller.
                                     Range 0~63 (@f32k)
    WF_PHY_0_SLP_CTRL_STATE_TIMEOUT[14] - (RO) Timeout status of radio sleep controller
                                     0: no timeout
                                     1: timeout
    RESERVED15[15]               - (RO) Reserved bits
    WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16] - (RO) Snapshot of mcu sleep controller when timeout happens
                                     [15]=radio_slp_ctrl_state[3]
                                     [14]=radio_slp_ctrl_state[2]
                                     [13]=radio_slp_ctrl_state[1]
                                     [12]=radio_slp_ctrl_state[0]
                                     [11]=radio_slp_ctrl_state_next[3]
                                     [10]=radio_slp_ctrl_state_next[2]
                                     [9] =radio_slp_ctrl_state_next[1]
                                     [8] =radio_slp_ctrl_state_next[0]
                                     [7] =wfsys_radio_slpprot_rdy
                                     [6] =wfsys_radio_mem_pon_done
                                     [5] =wfsys_radio_mem_pdn_done
                                     [4] =wfsys_radio_pwr_on
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_MASK 0xFFFF0000u                // WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_SHFT 16u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_MASK 0x00004000u                // WF_PHY_0_SLP_CTRL_STATE_TIMEOUT[14]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_SHFT 14u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_LIMIT_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_LIMIT_MASK 0x00003F00u                // CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_LIMIT_SHFT 8u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_CLR_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_CLR_MASK 0x00000080u                // CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_CLR[7]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_CLR_SHFT 7u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_EN_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_EN_MASK 0x00000040u                // CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_EN[6]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_TIMEOUT_EN_SHFT 6u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_ABNORMAL_EN_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_ABNORMAL_EN_MASK 0x00000020u                // CR_WF_PHY_0_SLP_CTRL_STATE_ABNORMAL_EN[5]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WF_PHY_0_SLP_CTRL_STATE_ABNORMAL_EN_SHFT 5u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_0_SLPPROT_RDY1_CHK_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_0_SLPPROT_RDY1_CHK_MASK 0x00000010u                // CR_MASK_WFSYS_WF_PHY_0_SLPPROT_RDY1_CHK[4]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_0_SLPPROT_RDY1_CHK_SHFT 4u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_0_SLPPROT_RDY0_CHK_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_0_SLPPROT_RDY0_CHK_MASK 0x00000008u                // CR_MASK_WFSYS_WF_PHY_0_SLPPROT_RDY0_CHK[3]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_0_SLPPROT_RDY0_CHK_SHFT 3u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_WF_PHY_0_MEM_PON_STATE_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_WF_PHY_0_MEM_PON_STATE_MASK 0x00000004u                // CR_FORCE_SKIP_WFSYS_WF_PHY_0_MEM_PON_STATE[2]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_WF_PHY_0_MEM_PON_STATE_SHFT 2u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WFSYS_WF_PHY_0_MEM_PREON_EN_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WFSYS_WF_PHY_0_MEM_PREON_EN_MASK 0x00000002u                // CR_WFSYS_WF_PHY_0_MEM_PREON_EN[1]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WFSYS_WF_PHY_0_MEM_PREON_EN_SHFT 1u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WFSYS_WF_PHY_0_LEGACY_SLEEP_EN_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WFSYS_WF_PHY_0_LEGACY_SLEEP_EN_MASK 0x00000001u                // CR_WFSYS_WF_PHY_0_LEGACY_SLEEP_EN[0]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_0_CR_WFSYS_WF_PHY_0_LEGACY_SLEEP_EN_SHFT 0u

/* =====================================================================================

  ---WFSYS_WF_PHY_1_SLP_CTRL_0 (0x87002000 + 0x204u)---

    CR_WFSYS_WF_PHY_1_LEGACY_SLEEP_EN[0] - (RW) RADIO legacy sleep enable. When cr_wfsys_radio_legacy_sleep_en=1, RADIO slp_ctrl FSM will "not" enter RADIO_MTCMOS_OFF state that is RADIO mtcmos will keep on and reset will not be asserted.
                                     0: dsleep
                                     1: legacy sleep
    CR_WFSYS_WF_PHY_1_MEM_PREON_EN[1] - (RW) To enable memory preon feature for radio. Memory preon feature is to early queue memory arbiter at mtcmos on stage. It is a fast wakeup option design for ALPL2.5 requirement
                                     0: disable
                                     1: enable
    CR_FORCE_SKIP_WFSYS_WF_PHY_1_MEM_PON_STATE[2] - (RW) To skip RADIO_MEMORY_ON state check mem_pon=1 criteria. If set to “1” then sleep controller will still send wfsys_radio_pon=1 to RGU and goto RADIO_DIS_SLPPROT state. This is for debug usage, normal mode should always keep “0”
                                     0: not skip
                                     1: skip
    CR_MASK_WFSYS_WF_PHY_1_SLPPROT_RDY0_CHK[3] - (RW) To mask check slpprot_rdy=0 at RADIO_DIS_SLPPROT_P1 state. Default we “don't” check slpprot_rdy=0 when disabling slpprot because slpprot might be enable by another power domain.
                                     0: need to check slpprot_rdy=0
                                     1: don't need to check slpprot_rdy=0
    CR_MASK_WFSYS_WF_PHY_1_SLPPROT_RDY1_CHK[4] - (RW) To mask check slpprot_rdy=1 at RADIO_EN_SLPPROT_P1 state. Default we “must” check slpprot_rdy=1 when enabling slpprot because slpprot must be enabled before power down.
                                     0: need to check slpprot_rdy=1
                                     1: don't need to check slpprot_rdy=1
    CR_WF_PHY_1_SLP_CTRL_STATE_ABNORMAL_EN[5] - (RW) Decide whether to jump to RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1. RADIO_ABNORMAL state will force on mtcmos, memory and disable slpprot.
                                     0: will “not” goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
                                     1: will goto RADIO_ABNORMAL state when radio_slp_ctrl_state_timeout=1
    CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_EN[6] - (RW) To enable timeout function for radio sleep controller. When timeout is enabled, if FSM stays at RADIO_MEMORY_ON/ RADIO_DIS_SLPPROT/ RADIO_EN_SLPPROT/ RADIO_MEMORY_OFF state longer than cr_radio_slp_ctrl_state_timeout_limit * T @f32k, radio_slp_ctrl_state_timeout will trigger.
                                     0: disable
                                     1: enable
    CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_CLR[7] - (RW) To clear radio_slp_ctrl_state_timeout, sw needs to write 1 clear then write 0 de-clear.
                                     0: not clear
                                     1: clear
    CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8] - (RW) Timeout threshold for radio sleep controller.
                                     Range 0~63 (@f32k)
    WF_PHY_1_SLP_CTRL_STATE_TIMEOUT[14] - (RO) Timeout status of radio sleep controller
                                     0: no timeout
                                     1: timeout
    RESERVED15[15]               - (RO) Reserved bits
    WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16] - (RO) Snapshot of mcu sleep controller when timeout happens
                                     [15]=radio_slp_ctrl_state[3]
                                     [14]=radio_slp_ctrl_state[2]
                                     [13]=radio_slp_ctrl_state[1]
                                     [12]=radio_slp_ctrl_state[0]
                                     [11]=radio_slp_ctrl_state_next[3]
                                     [10]=radio_slp_ctrl_state_next[2]
                                     [9] =radio_slp_ctrl_state_next[1]
                                     [8] =radio_slp_ctrl_state_next[0]
                                     [7] =wfsys_radio_slpprot_rdy
                                     [6] =wfsys_radio_mem_pon_done
                                     [5] =wfsys_radio_mem_pdn_done
                                     [4] =wfsys_radio_pwr_on
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_MASK 0xFFFF0000u                // WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT[31..16]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_SNAPSHOT_SHFT 16u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_MASK 0x00004000u                // WF_PHY_1_SLP_CTRL_STATE_TIMEOUT[14]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_SHFT 14u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_LIMIT_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_LIMIT_MASK 0x00003F00u                // CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_LIMIT[13..8]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_LIMIT_SHFT 8u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_CLR_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_CLR_MASK 0x00000080u                // CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_CLR[7]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_CLR_SHFT 7u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_EN_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_EN_MASK 0x00000040u                // CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_EN[6]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_TIMEOUT_EN_SHFT 6u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_ABNORMAL_EN_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_ABNORMAL_EN_MASK 0x00000020u                // CR_WF_PHY_1_SLP_CTRL_STATE_ABNORMAL_EN[5]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WF_PHY_1_SLP_CTRL_STATE_ABNORMAL_EN_SHFT 5u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_1_SLPPROT_RDY1_CHK_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_1_SLPPROT_RDY1_CHK_MASK 0x00000010u                // CR_MASK_WFSYS_WF_PHY_1_SLPPROT_RDY1_CHK[4]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_1_SLPPROT_RDY1_CHK_SHFT 4u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_1_SLPPROT_RDY0_CHK_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_1_SLPPROT_RDY0_CHK_MASK 0x00000008u                // CR_MASK_WFSYS_WF_PHY_1_SLPPROT_RDY0_CHK[3]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_MASK_WFSYS_WF_PHY_1_SLPPROT_RDY0_CHK_SHFT 3u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_WF_PHY_1_MEM_PON_STATE_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_WF_PHY_1_MEM_PON_STATE_MASK 0x00000004u                // CR_FORCE_SKIP_WFSYS_WF_PHY_1_MEM_PON_STATE[2]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_FORCE_SKIP_WFSYS_WF_PHY_1_MEM_PON_STATE_SHFT 2u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WFSYS_WF_PHY_1_MEM_PREON_EN_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WFSYS_WF_PHY_1_MEM_PREON_EN_MASK 0x00000002u                // CR_WFSYS_WF_PHY_1_MEM_PREON_EN[1]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WFSYS_WF_PHY_1_MEM_PREON_EN_SHFT 1u
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WFSYS_WF_PHY_1_LEGACY_SLEEP_EN_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WFSYS_WF_PHY_1_LEGACY_SLEEP_EN_MASK 0x00000001u                // CR_WFSYS_WF_PHY_1_LEGACY_SLEEP_EN[0]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_0_CR_WFSYS_WF_PHY_1_LEGACY_SLEEP_EN_SHFT 0u

/* =====================================================================================

  ---WFSYS_MCU_SLP_CTRL_DBG_OUT (0x87002000 + 0x800u)---

    WFSYS_MCU_SLP_CTRL_DBG_OUT[31..0] - (RO) [31]=1'b1;
                                     [30]=wfsys_mcu_pwr_on_rdy;
                                     [29]=wfsys_mcu_pwr_off_rdy;
                                     [28]=wfsys_mcu_abnormal;
                                     [27]=wfsys_mcu_pwr_enable;
                                     [26]=wfsys_mcu_mem_pon;
                                     [25]=wfsys_mcu_slpprot_p1_req;
                                     [24]=wfsys_mcu_slpprot_p2_req;
                                     [23]=wfsys_mcu_cmdbt_rs_req;
                                     [22]=wfsys_mcu_cmdbt_bk_req;
                                     [21]=mcu_slp_ctrl_state_timeout_cnt_en_sync_32k;
                                     [20]=mcu_slp_ctrl_state_timeout;
                                     [19]=mcu_slp_ctrl_state_next[3];
                                     [18]=mcu_slp_ctrl_state_next[2];
                                     [17]=mcu_slp_ctrl_state_next[1];
                                     [16]=mcu_slp_ctrl_state_next[0];
                                     [15]=mcu_slp_ctrl_state[3];
                                     [14]=mcu_slp_ctrl_state[2];
                                     [13]=mcu_slp_ctrl_state[1];
                                     [12]=mcu_slp_ctrl_state[0];
                                     [11]=wfsys_mcu_mem_pon_done;
                                     [10]=wfsys_mcu_mem_pdn_done;
                                     [9] =wfsys_mcu_slpprot_p1_rdy;
                                     [8] =wfsys_mcu_slpprot_p2_rdy;
                                     [7] =wfsys_mcu_restore_done;
                                     [6] =wfsys_mcu_backup_done;
                                     [5] =wfsys_mcu_pwr_on;
                                     [4] =wfsys_mcu_1st_pon_flag;
                                     [3] =wfsys_mcu_hw_subsys_pwr_on_state;
                                     [2] =wfsys_mcu_hw_subsys_pwr_pdn_state;
                                     [1] =mcu_slp_ctrl_state_timeout_sync_clk;
                                     [0] =mcu_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk;

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_DBG_OUT_WFSYS_MCU_SLP_CTRL_DBG_OUT_ADDR WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_DBG_OUT_ADDR
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_DBG_OUT_WFSYS_MCU_SLP_CTRL_DBG_OUT_MASK 0xFFFFFFFFu                // WFSYS_MCU_SLP_CTRL_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WFSYS_MCU_SLP_CTRL_DBG_OUT_WFSYS_MCU_SLP_CTRL_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WFSYS_UMAC_SLP_CTRL_DBG_OUT (0x87002000 + 0x804u)---

    WFSYS_UMAC_SLP_CTRL_DBG_OUT[31..0] - (RO) [31]=1'b1;
                                     [30]=1'b0;
                                     [29]=1'b1;
                                     [28]=1'b0;
                                     [27]=1'b1;
                                     [26]=1'b0;
                                     [25]=wfsys_radio_pwr_on_rdy;
                                     [24]=wfsys_radio_pwr_off_rdy;
                                     [23]=wfsys_radio_abnormal;
                                     [22]=wfsys_radio_mtcmos_on_rdy;
                                     [21]=wfsys_radio_pwr_enable;
                                     [20]=wfsys_radio_mem_preon;
                                     [19]=wfsys_radio_mem_pon;
                                     [18]=wfsys_radio_slpprot_req;
                                     [17]=radio_slp_ctrl_state_timeout_cnt_en_sync_32k;
                                     [16]=radio_slp_ctrl_state_timeout;
                                     [15]=radio_slp_ctrl_state[3];
                                     [14]=radio_slp_ctrl_state[2];
                                     [13]=radio_slp_ctrl_state[1];
                                     [12]=radio_slp_ctrl_state[0];
                                     [11]=radio_slp_ctrl_state_next[3];
                                     [10]=radio_slp_ctrl_state_next[2];
                                     [9] =radio_slp_ctrl_state_next[1];
                                     [8] =radio_slp_ctrl_state_next[0];
                                     [7] =wfsys_radio_slpprot_rdy;
                                     [6] =wfsys_radio_mem_pon_done;
                                     [5] =wfsys_radio_mem_pdn_done;
                                     [4] =wfsys_radio_pwr_on;
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state;
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state;
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk;
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk;

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_DBG_OUT_WFSYS_UMAC_SLP_CTRL_DBG_OUT_ADDR WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_DBG_OUT_ADDR
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_DBG_OUT_WFSYS_UMAC_SLP_CTRL_DBG_OUT_MASK 0xFFFFFFFFu                // WFSYS_UMAC_SLP_CTRL_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WFSYS_UMAC_SLP_CTRL_DBG_OUT_WFSYS_UMAC_SLP_CTRL_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WFSYS_LMACON_SLP_CTRL_DBG_OUT (0x87002000 + 0x808u)---

    WFSYS_LMACON_SLP_CTRL_DBG_OUT[31..0] - (RO) [31]=1'b1;
                                     [30]=1'b0;
                                     [29]=1'b1;
                                     [28]=1'b0;
                                     [27]=1'b1;
                                     [26]=1'b0;
                                     [25]=wfsys_radio_pwr_on_rdy;
                                     [24]=wfsys_radio_pwr_off_rdy;
                                     [23]=wfsys_radio_abnormal;
                                     [22]=wfsys_radio_mtcmos_on_rdy;
                                     [21]=wfsys_radio_pwr_enable;
                                     [20]=wfsys_radio_mem_preon;
                                     [19]=wfsys_radio_mem_pon;
                                     [18]=wfsys_radio_slpprot_req;
                                     [17]=radio_slp_ctrl_state_timeout_cnt_en_sync_32k;
                                     [16]=radio_slp_ctrl_state_timeout;
                                     [15]=radio_slp_ctrl_state[3];
                                     [14]=radio_slp_ctrl_state[2];
                                     [13]=radio_slp_ctrl_state[1];
                                     [12]=radio_slp_ctrl_state[0];
                                     [11]=radio_slp_ctrl_state_next[3];
                                     [10]=radio_slp_ctrl_state_next[2];
                                     [9] =radio_slp_ctrl_state_next[1];
                                     [8] =radio_slp_ctrl_state_next[0];
                                     [7] =wfsys_radio_slpprot_rdy;
                                     [6] =wfsys_radio_mem_pon_done;
                                     [5] =wfsys_radio_mem_pdn_done;
                                     [4] =wfsys_radio_pwr_on;
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state;
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state;
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk;
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk;

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_DBG_OUT_WFSYS_LMACON_SLP_CTRL_DBG_OUT_ADDR WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_DBG_OUT_ADDR
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_DBG_OUT_WFSYS_LMACON_SLP_CTRL_DBG_OUT_MASK 0xFFFFFFFFu                // WFSYS_LMACON_SLP_CTRL_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WFSYS_LMACON_SLP_CTRL_DBG_OUT_WFSYS_LMACON_SLP_CTRL_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT (0x87002000 + 0x81Cu)---

    WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT[31..0] - (RO) [31]=1'b1;
                                     [30]=1'b0;
                                     [29]=1'b1;
                                     [28]=1'b0;
                                     [27]=1'b1;
                                     [26]=1'b0;
                                     [25]=wfsys_radio_pwr_on_rdy;
                                     [24]=wfsys_radio_pwr_off_rdy;
                                     [23]=wfsys_radio_abnormal;
                                     [22]=wfsys_radio_mtcmos_on_rdy;
                                     [21]=wfsys_radio_pwr_enable;
                                     [20]=wfsys_radio_mem_preon;
                                     [19]=wfsys_radio_mem_pon;
                                     [18]=wfsys_radio_slpprot_req;
                                     [17]=radio_slp_ctrl_state_timeout_cnt_en_sync_32k;
                                     [16]=radio_slp_ctrl_state_timeout;
                                     [15]=radio_slp_ctrl_state[3];
                                     [14]=radio_slp_ctrl_state[2];
                                     [13]=radio_slp_ctrl_state[1];
                                     [12]=radio_slp_ctrl_state[0];
                                     [11]=radio_slp_ctrl_state_next[3];
                                     [10]=radio_slp_ctrl_state_next[2];
                                     [9] =radio_slp_ctrl_state_next[1];
                                     [8] =radio_slp_ctrl_state_next[0];
                                     [7] =wfsys_radio_slpprot_rdy;
                                     [6] =wfsys_radio_mem_pon_done;
                                     [5] =wfsys_radio_mem_pdn_done;
                                     [4] =wfsys_radio_pwr_on;
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state;
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state;
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk;
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk;

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT_WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT_ADDR WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT_WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT_MASK 0xFFFFFFFFu                // WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT_WFSYS_BN0_LMAC_SLP_CTRL_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT (0x87002000 + 0x820u)---

    WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT[31..0] - (RO) [31]=1'b1;
                                     [30]=1'b0;
                                     [29]=1'b1;
                                     [28]=1'b0;
                                     [27]=1'b1;
                                     [26]=1'b0;
                                     [25]=wfsys_radio_pwr_on_rdy;
                                     [24]=wfsys_radio_pwr_off_rdy;
                                     [23]=wfsys_radio_abnormal;
                                     [22]=wfsys_radio_mtcmos_on_rdy;
                                     [21]=wfsys_radio_pwr_enable;
                                     [20]=wfsys_radio_mem_preon;
                                     [19]=wfsys_radio_mem_pon;
                                     [18]=wfsys_radio_slpprot_req;
                                     [17]=radio_slp_ctrl_state_timeout_cnt_en_sync_32k;
                                     [16]=radio_slp_ctrl_state_timeout;
                                     [15]=radio_slp_ctrl_state[3];
                                     [14]=radio_slp_ctrl_state[2];
                                     [13]=radio_slp_ctrl_state[1];
                                     [12]=radio_slp_ctrl_state[0];
                                     [11]=radio_slp_ctrl_state_next[3];
                                     [10]=radio_slp_ctrl_state_next[2];
                                     [9] =radio_slp_ctrl_state_next[1];
                                     [8] =radio_slp_ctrl_state_next[0];
                                     [7] =wfsys_radio_slpprot_rdy;
                                     [6] =wfsys_radio_mem_pon_done;
                                     [5] =wfsys_radio_mem_pdn_done;
                                     [4] =wfsys_radio_pwr_on;
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state;
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state;
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk;
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk;

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT_WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT_ADDR WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT_ADDR
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT_WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT_MASK 0xFFFFFFFFu                // WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT_WFSYS_BN1_LMAC_SLP_CTRL_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT (0x87002000 + 0x830u)---

    WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT[31..0] - (RO) [31]=1'b1;
                                     [30]=1'b0;
                                     [29]=1'b1;
                                     [28]=1'b0;
                                     [27]=1'b1;
                                     [26]=1'b0;
                                     [25]=wfsys_radio_pwr_on_rdy;
                                     [24]=wfsys_radio_pwr_off_rdy;
                                     [23]=wfsys_radio_abnormal;
                                     [22]=wfsys_radio_mtcmos_on_rdy;
                                     [21]=wfsys_radio_pwr_enable;
                                     [20]=wfsys_radio_mem_preon;
                                     [19]=wfsys_radio_mem_pon;
                                     [18]=wfsys_radio_slpprot_req;
                                     [17]=radio_slp_ctrl_state_timeout_cnt_en_sync_32k;
                                     [16]=radio_slp_ctrl_state_timeout;
                                     [15]=radio_slp_ctrl_state[3];
                                     [14]=radio_slp_ctrl_state[2];
                                     [13]=radio_slp_ctrl_state[1];
                                     [12]=radio_slp_ctrl_state[0];
                                     [11]=radio_slp_ctrl_state_next[3];
                                     [10]=radio_slp_ctrl_state_next[2];
                                     [9] =radio_slp_ctrl_state_next[1];
                                     [8] =radio_slp_ctrl_state_next[0];
                                     [7] =wfsys_radio_slpprot_rdy;
                                     [6] =wfsys_radio_mem_pon_done;
                                     [5] =wfsys_radio_mem_pdn_done;
                                     [4] =wfsys_radio_pwr_on;
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state;
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state;
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk;
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk;

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT_WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT_WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT_MASK 0xFFFFFFFFu                // WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT_WFSYS_WF_PHY_0_SLP_CTRL_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT (0x87002000 + 0x834u)---

    WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT[31..0] - (RO) [31]=1'b1;
                                     [30]=1'b0;
                                     [29]=1'b1;
                                     [28]=1'b0;
                                     [27]=1'b1;
                                     [26]=1'b0;
                                     [25]=wfsys_radio_pwr_on_rdy;
                                     [24]=wfsys_radio_pwr_off_rdy;
                                     [23]=wfsys_radio_abnormal;
                                     [22]=wfsys_radio_mtcmos_on_rdy;
                                     [21]=wfsys_radio_pwr_enable;
                                     [20]=wfsys_radio_mem_preon;
                                     [19]=wfsys_radio_mem_pon;
                                     [18]=wfsys_radio_slpprot_req;
                                     [17]=radio_slp_ctrl_state_timeout_cnt_en_sync_32k;
                                     [16]=radio_slp_ctrl_state_timeout;
                                     [15]=radio_slp_ctrl_state[3];
                                     [14]=radio_slp_ctrl_state[2];
                                     [13]=radio_slp_ctrl_state[1];
                                     [12]=radio_slp_ctrl_state[0];
                                     [11]=radio_slp_ctrl_state_next[3];
                                     [10]=radio_slp_ctrl_state_next[2];
                                     [9] =radio_slp_ctrl_state_next[1];
                                     [8] =radio_slp_ctrl_state_next[0];
                                     [7] =wfsys_radio_slpprot_rdy;
                                     [6] =wfsys_radio_mem_pon_done;
                                     [5] =wfsys_radio_mem_pdn_done;
                                     [4] =wfsys_radio_pwr_on;
                                     [3] =wfsys_radio_hw_subsys_pwr_on_state;
                                     [2] =wfsys_radio_hw_subsys_pwr_pdn_state;
                                     [1] =radio_slp_ctrl_state_timeout_sync_clk;
                                     [0] =radio_slp_ctrl_state_timeout_cnt_en_sync_32k_sync_clk;

 =====================================================================================*/
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT_WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT_ADDR WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT_ADDR
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT_WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT_MASK 0xFFFFFFFFu                // WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT_WFSYS_WF_PHY_1_SLP_CTRL_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CFG_VON_IRQ_MASK_0 (0x87002000 + 0x900u)---

    CR_WF_TOP_CFG_VON_IRQ_B_PRE_MASK_0[31..0] - (RW) IRQ mask of wf_top_cfg_von_irq_b
                                     0: un-mask
                                     1: mask
                                     [ 0]= mcu_slp_ctrl_state_timeout_b
                                     [ 1]= umac_slp_ctrl_state_timeout_b
                                     [ 2]= lmacon_slp_ctrl_state_timeout_b
                                     [ 3]= bn0_lmacon_slp_ctrl_state_timeout_b
                                     [ 4]= bn1_lmacon_slp_ctrl_state_timeout_b
                                     [ 5]= bn2_lmacon_slp_ctrl_state_timeout_b
                                     [ 6]= bn3_lmacon_slp_ctrl_state_timeout_b
                                     [ 7]= bn0_lmac_slp_ctrl_state_timeout_b
                                     [ 8]= bn1_lmac_slp_ctrl_state_timeout_b
                                     [ 9]= bn2_lmac_slp_ctrl_state_timeout_b
                                     [10]= bn3_lmac_slp_ctrl_state_timeout_b
                                     [11]= lit_slp_ctrl_state_timeout_b
                                     [12]= wf_phy_0_slp_ctrl_state_timeout_b
                                     [13]= wf_phy_1_slp_ctrl_state_timeout_b
                                     [14]= bn0_phy_0_slp_ctrl_state_timeout_b
                                     [15]= bn0_phy_1_slp_ctrl_state_timeout_b
                                     [16]= bn1_phy_0_slp_ctrl_state_timeout_b
                                     [17]= bn1_phy_1_slp_ctrl_state_timeout_b
                                     [18]= bn2_phy_0_slp_ctrl_state_timeout_b
                                     [19]= bn2_phy_1_slp_ctrl_state_timeout_b
                                     [20]= bn3_phy_0_slp_ctrl_state_timeout_b
                                     [21]= bn3_phy_1_slp_ctrl_state_timeout_b
                                     [22]= bn0_phy_l2_0_slp_ctrl_state_timeout_b
                                     [23]= bn0_phy_l2_1_slp_ctrl_state_timeout_b
                                     [24]= bn0_phy_l2_2_slp_ctrl_state_timeout_b
                                     [25]= bn0_phy_l2_3_slp_ctrl_state_timeout_b
                                     [26]= bn0_phy_l2_4_slp_ctrl_state_timeout_b
                                     [27]= bn1_phy_l2_0_slp_ctrl_state_timeout_b
                                     [28]= bn1_phy_l2_1_slp_ctrl_state_timeout_b
                                     [29]= bn1_phy_l2_2_slp_ctrl_state_timeout_b
                                     [30]= bn1_phy_l2_3_slp_ctrl_state_timeout_b
                                     [31]= bn1_phy_l2_4_slp_ctrl_state_timeout_b

 =====================================================================================*/
#define WF_TOP_CFG_VON_IRQ_MASK_0_CR_WF_TOP_CFG_VON_IRQ_B_PRE_MASK_0_ADDR WF_TOP_CFG_VON_IRQ_MASK_0_ADDR
#define WF_TOP_CFG_VON_IRQ_MASK_0_CR_WF_TOP_CFG_VON_IRQ_B_PRE_MASK_0_MASK 0xFFFFFFFFu                // CR_WF_TOP_CFG_VON_IRQ_B_PRE_MASK_0[31..0]
#define WF_TOP_CFG_VON_IRQ_MASK_0_CR_WF_TOP_CFG_VON_IRQ_B_PRE_MASK_0_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CFG_VON_IRQ_MASK_1 (0x87002000 + 0x904u)---

    CR_WF_TOP_CFG_VON_IRQ_B_PRE_MASK_1[15..0] - (RW) IRQ mask of wf_top_cfg_von_irq_b
                                     0: un-mask
                                     1: mask
                                     [ 0]= bn2_phy_l2_0_slp_ctrl_state_timeout_b
                                     [ 1]= bn2_phy_l2_1_slp_ctrl_state_timeout_b
                                     [ 2]= bn2_phy_l2_2_slp_ctrl_state_timeout_b
                                     [ 3]= bn2_phy_l2_3_slp_ctrl_state_timeout_b
                                     [ 4]= bn2_phy_l2_4_slp_ctrl_state_timeout_b
                                     [ 5]= bn3_phy_l2_0_slp_ctrl_state_timeout_b
                                     [ 6]= bn3_phy_l2_1_slp_ctrl_state_timeout_b
                                     [ 7]= bn3_phy_l2_2_slp_ctrl_state_timeout_b
                                     [ 8]= bn3_phy_l2_3_slp_ctrl_state_timeout_b
                                     [ 9]= bn3_phy_l2_4_slp_ctrl_state_timeout_b
                                     [10]= bn0_phy_dsp_slp_ctrl_state_timeout_b
                                     [11]= bn1_phy_dsp_slp_ctrl_state_timeout_b
                                     [12]= bn2_phy_dsp_slp_ctrl_state_timeout_b
                                     [13]= bn3_phy_dsp_slp_ctrl_state_timeout_b
                                     [14]= wf_top_bus_gfck_chk_fail_irq_b
                                     [15]= wf_top_mcu_gfck_chk_fail_irq_b
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_IRQ_MASK_1_CR_WF_TOP_CFG_VON_IRQ_B_PRE_MASK_1_ADDR WF_TOP_CFG_VON_IRQ_MASK_1_ADDR
#define WF_TOP_CFG_VON_IRQ_MASK_1_CR_WF_TOP_CFG_VON_IRQ_B_PRE_MASK_1_MASK 0x0000FFFFu                // CR_WF_TOP_CFG_VON_IRQ_B_PRE_MASK_1[15..0]
#define WF_TOP_CFG_VON_IRQ_MASK_1_CR_WF_TOP_CFG_VON_IRQ_B_PRE_MASK_1_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CFG_VON_IRQ_STATUS_0 (0x87002000 + 0x910u)---

    WF_TOP_CFG_VON_IRQ_STATUS_0[31..0] - (RO) IRQ status of wf_top_cfg_von_irq_b
                                     0: IRQ happens
                                     1: IRQ not happen
                                     [ 0]= mcu_slp_ctrl_state_timeout_b
                                     [ 1]= umac_slp_ctrl_state_timeout_b
                                     [ 2]= lmacon_slp_ctrl_state_timeout_b
                                     [ 3]= bn0_lmacon_slp_ctrl_state_timeout_b
                                     [ 4]= bn1_lmacon_slp_ctrl_state_timeout_b
                                     [ 5]= bn2_lmacon_slp_ctrl_state_timeout_b
                                     [ 6]= bn3_lmacon_slp_ctrl_state_timeout_b
                                     [ 7]= bn0_lmac_slp_ctrl_state_timeout_b
                                     [ 8]= bn1_lmac_slp_ctrl_state_timeout_b
                                     [ 9]= bn2_lmac_slp_ctrl_state_timeout_b
                                     [10]= bn3_lmac_slp_ctrl_state_timeout_b
                                     [11]= lit_slp_ctrl_state_timeout_b
                                     [12]= wf_phy_0_slp_ctrl_state_timeout_b
                                     [13]= wf_phy_1_slp_ctrl_state_timeout_b
                                     [14]= bn0_phy_0_slp_ctrl_state_timeout_b
                                     [15]= bn0_phy_1_slp_ctrl_state_timeout_b
                                     [16]= bn1_phy_0_slp_ctrl_state_timeout_b
                                     [17]= bn1_phy_1_slp_ctrl_state_timeout_b
                                     [18]= bn2_phy_0_slp_ctrl_state_timeout_b
                                     [19]= bn2_phy_1_slp_ctrl_state_timeout_b
                                     [20]= bn3_phy_0_slp_ctrl_state_timeout_b
                                     [21]= bn3_phy_1_slp_ctrl_state_timeout_b
                                     [22]= bn0_phy_l2_0_slp_ctrl_state_timeout_b
                                     [23]= bn0_phy_l2_1_slp_ctrl_state_timeout_b
                                     [24]= bn0_phy_l2_2_slp_ctrl_state_timeout_b
                                     [25]= bn0_phy_l2_3_slp_ctrl_state_timeout_b
                                     [26]= bn0_phy_l2_4_slp_ctrl_state_timeout_b
                                     [27]= bn1_phy_l2_0_slp_ctrl_state_timeout_b
                                     [28]= bn1_phy_l2_1_slp_ctrl_state_timeout_b
                                     [29]= bn1_phy_l2_2_slp_ctrl_state_timeout_b
                                     [30]= bn1_phy_l2_3_slp_ctrl_state_timeout_b
                                     [31]= bn1_phy_l2_4_slp_ctrl_state_timeout_b

 =====================================================================================*/
#define WF_TOP_CFG_VON_IRQ_STATUS_0_WF_TOP_CFG_VON_IRQ_STATUS_0_ADDR WF_TOP_CFG_VON_IRQ_STATUS_0_ADDR
#define WF_TOP_CFG_VON_IRQ_STATUS_0_WF_TOP_CFG_VON_IRQ_STATUS_0_MASK 0xFFFFFFFFu                // WF_TOP_CFG_VON_IRQ_STATUS_0[31..0]
#define WF_TOP_CFG_VON_IRQ_STATUS_0_WF_TOP_CFG_VON_IRQ_STATUS_0_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CFG_VON_IRQ_STATUS_1 (0x87002000 + 0x914u)---

    WF_TOP_CFG_VON_IRQ_STATUS_1[15..0] - (RO) IRQ status of wf_top_cfg_von_irq_b
                                     0: IRQ happens
                                     1: IRQ not happen
                                     [ 0]= bn2_phy_l2_0_slp_ctrl_state_timeout_b
                                     [ 1]= bn2_phy_l2_1_slp_ctrl_state_timeout_b
                                     [ 2]= bn2_phy_l2_2_slp_ctrl_state_timeout_b
                                     [ 3]= bn2_phy_l2_3_slp_ctrl_state_timeout_b
                                     [ 4]= bn2_phy_l2_4_slp_ctrl_state_timeout_b
                                     [ 5]= bn3_phy_l2_0_slp_ctrl_state_timeout_b
                                     [ 6]= bn3_phy_l2_1_slp_ctrl_state_timeout_b
                                     [ 7]= bn3_phy_l2_2_slp_ctrl_state_timeout_b
                                     [ 8]= bn3_phy_l2_3_slp_ctrl_state_timeout_b
                                     [ 9]= bn3_phy_l2_4_slp_ctrl_state_timeout_b
                                     [10]= bn0_phy_dsp_slp_ctrl_state_timeout_b
                                     [11]= bn1_phy_dsp_slp_ctrl_state_timeout_b
                                     [12]= bn2_phy_dsp_slp_ctrl_state_timeout_b
                                     [13]= bn3_phy_dsp_slp_ctrl_state_timeout_b
                                     [14]= wf_top_bus_gfck_chk_fail_irq_b
                                     [15]= wf_top_mcu_gfck_chk_fail_irq_b
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_IRQ_STATUS_1_WF_TOP_CFG_VON_IRQ_STATUS_1_ADDR WF_TOP_CFG_VON_IRQ_STATUS_1_ADDR
#define WF_TOP_CFG_VON_IRQ_STATUS_1_WF_TOP_CFG_VON_IRQ_STATUS_1_MASK 0x0000FFFFu                // WF_TOP_CFG_VON_IRQ_STATUS_1[15..0]
#define WF_TOP_CFG_VON_IRQ_STATUS_1_WF_TOP_CFG_VON_IRQ_STATUS_1_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CFG_VON_EINT_MASK_0 (0x87002000 + 0x920u)---

    CR_WF_TOP_CFG_VON_EINT_B_PRE_MASK_0[31..0] - (RW) EINT mask of wf_top_cfg_von_eint_b
                                     0: un-mask
                                     1: mask
                                     [ 0]= mcu_slp_ctrl_state_timeout_b
                                     [ 1]= umac_slp_ctrl_state_timeout_b
                                     [ 2]= lmacon_slp_ctrl_state_timeout_b
                                     [ 3]= bn0_lmacon_slp_ctrl_state_timeout_b
                                     [ 4]= bn1_lmacon_slp_ctrl_state_timeout_b
                                     [ 5]= bn2_lmacon_slp_ctrl_state_timeout_b
                                     [ 6]= bn3_lmacon_slp_ctrl_state_timeout_b
                                     [ 7]= bn0_lmac_slp_ctrl_state_timeout_b
                                     [ 8]= bn1_lmac_slp_ctrl_state_timeout_b
                                     [ 9]= bn2_lmac_slp_ctrl_state_timeout_b
                                     [10]= bn3_lmac_slp_ctrl_state_timeout_b
                                     [11]= lit_slp_ctrl_state_timeout_b
                                     [12]= wf_phy_0_slp_ctrl_state_timeout_b
                                     [13]= wf_phy_1_slp_ctrl_state_timeout_b
                                     [14]= bn0_phy_0_slp_ctrl_state_timeout_b
                                     [15]= bn0_phy_1_slp_ctrl_state_timeout_b
                                     [16]= bn1_phy_0_slp_ctrl_state_timeout_b
                                     [17]= bn1_phy_1_slp_ctrl_state_timeout_b
                                     [18]= bn2_phy_0_slp_ctrl_state_timeout_b
                                     [19]= bn2_phy_1_slp_ctrl_state_timeout_b
                                     [20]= bn3_phy_0_slp_ctrl_state_timeout_b
                                     [21]= bn3_phy_1_slp_ctrl_state_timeout_b
                                     [22]= bn0_phy_l2_0_slp_ctrl_state_timeout_b
                                     [23]= bn0_phy_l2_1_slp_ctrl_state_timeout_b
                                     [24]= bn0_phy_l2_2_slp_ctrl_state_timeout_b
                                     [25]= bn0_phy_l2_3_slp_ctrl_state_timeout_b
                                     [26]= bn0_phy_l2_4_slp_ctrl_state_timeout_b
                                     [27]= bn1_phy_l2_0_slp_ctrl_state_timeout_b
                                     [28]= bn1_phy_l2_1_slp_ctrl_state_timeout_b
                                     [29]= bn1_phy_l2_2_slp_ctrl_state_timeout_b
                                     [30]= bn1_phy_l2_3_slp_ctrl_state_timeout_b
                                     [31]= bn1_phy_l2_4_slp_ctrl_state_timeout_b

 =====================================================================================*/
#define WF_TOP_CFG_VON_EINT_MASK_0_CR_WF_TOP_CFG_VON_EINT_B_PRE_MASK_0_ADDR WF_TOP_CFG_VON_EINT_MASK_0_ADDR
#define WF_TOP_CFG_VON_EINT_MASK_0_CR_WF_TOP_CFG_VON_EINT_B_PRE_MASK_0_MASK 0xFFFFFFFFu                // CR_WF_TOP_CFG_VON_EINT_B_PRE_MASK_0[31..0]
#define WF_TOP_CFG_VON_EINT_MASK_0_CR_WF_TOP_CFG_VON_EINT_B_PRE_MASK_0_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CFG_VON_EINT_MASK_1 (0x87002000 + 0x924u)---

    CR_WF_TOP_CFG_VON_EINT_B_PRE_MASK_1[15..0] - (RW) EINT mask of wf_top_cfg_von_eint_b
                                     0: un-mask
                                     1: mask
                                     [ 0]= bn2_phy_l2_0_slp_ctrl_state_timeout_b
                                     [ 1]= bn2_phy_l2_1_slp_ctrl_state_timeout_b
                                     [ 2]= bn2_phy_l2_2_slp_ctrl_state_timeout_b
                                     [ 3]= bn2_phy_l2_3_slp_ctrl_state_timeout_b
                                     [ 4]= bn2_phy_l2_4_slp_ctrl_state_timeout_b
                                     [ 5]= bn3_phy_l2_0_slp_ctrl_state_timeout_b
                                     [ 6]= bn3_phy_l2_1_slp_ctrl_state_timeout_b
                                     [ 7]= bn3_phy_l2_2_slp_ctrl_state_timeout_b
                                     [ 8]= bn3_phy_l2_3_slp_ctrl_state_timeout_b
                                     [ 9]= bn3_phy_l2_4_slp_ctrl_state_timeout_b
                                     [10]= bn0_phy_dsp_slp_ctrl_state_timeout_b
                                     [11]= bn1_phy_dsp_slp_ctrl_state_timeout_b
                                     [12]= bn2_phy_dsp_slp_ctrl_state_timeout_b
                                     [13]= bn3_phy_dsp_slp_ctrl_state_timeout_b
                                     [14]= wf_top_bus_gfck_chk_fail_irq_b
                                     [15]= wf_top_mcu_gfck_chk_fail_irq_b
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_EINT_MASK_1_CR_WF_TOP_CFG_VON_EINT_B_PRE_MASK_1_ADDR WF_TOP_CFG_VON_EINT_MASK_1_ADDR
#define WF_TOP_CFG_VON_EINT_MASK_1_CR_WF_TOP_CFG_VON_EINT_B_PRE_MASK_1_MASK 0x0000FFFFu                // CR_WF_TOP_CFG_VON_EINT_B_PRE_MASK_1[15..0]
#define WF_TOP_CFG_VON_EINT_MASK_1_CR_WF_TOP_CFG_VON_EINT_B_PRE_MASK_1_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CFG_VON_EINT_STATUS_0 (0x87002000 + 0x930u)---

    WF_TOP_CFG_VON_EINT_STATUS_0[31..0] - (RO) EINT status of wf_top_cfg_von_eint_b
                                     0: EINT happens
                                     1: EINT not happen
                                     [ 0]= mcu_slp_ctrl_state_timeout_b
                                     [ 1]= umac_slp_ctrl_state_timeout_b
                                     [ 2]= lmacon_slp_ctrl_state_timeout_b
                                     [ 3]= bn0_lmacon_slp_ctrl_state_timeout_b
                                     [ 4]= bn1_lmacon_slp_ctrl_state_timeout_b
                                     [ 5]= bn2_lmacon_slp_ctrl_state_timeout_b
                                     [ 6]= bn3_lmacon_slp_ctrl_state_timeout_b
                                     [ 7]= bn0_lmac_slp_ctrl_state_timeout_b
                                     [ 8]= bn1_lmac_slp_ctrl_state_timeout_b
                                     [ 9]= bn2_lmac_slp_ctrl_state_timeout_b
                                     [10]= bn3_lmac_slp_ctrl_state_timeout_b
                                     [11]= lit_slp_ctrl_state_timeout_b
                                     [12]= wf_phy_0_slp_ctrl_state_timeout_b
                                     [13]= wf_phy_1_slp_ctrl_state_timeout_b
                                     [14]= bn0_phy_0_slp_ctrl_state_timeout_b
                                     [15]= bn0_phy_1_slp_ctrl_state_timeout_b
                                     [16]= bn1_phy_0_slp_ctrl_state_timeout_b
                                     [17]= bn1_phy_1_slp_ctrl_state_timeout_b
                                     [18]= bn2_phy_0_slp_ctrl_state_timeout_b
                                     [19]= bn2_phy_1_slp_ctrl_state_timeout_b
                                     [20]= bn3_phy_0_slp_ctrl_state_timeout_b
                                     [21]= bn3_phy_1_slp_ctrl_state_timeout_b
                                     [22]= bn0_phy_l2_0_slp_ctrl_state_timeout_b
                                     [23]= bn0_phy_l2_1_slp_ctrl_state_timeout_b
                                     [24]= bn0_phy_l2_2_slp_ctrl_state_timeout_b
                                     [25]= bn0_phy_l2_3_slp_ctrl_state_timeout_b
                                     [26]= bn0_phy_l2_4_slp_ctrl_state_timeout_b
                                     [27]= bn1_phy_l2_0_slp_ctrl_state_timeout_b
                                     [28]= bn1_phy_l2_1_slp_ctrl_state_timeout_b
                                     [29]= bn1_phy_l2_2_slp_ctrl_state_timeout_b
                                     [30]= bn1_phy_l2_3_slp_ctrl_state_timeout_b
                                     [31]= bn1_phy_l2_4_slp_ctrl_state_timeout_b

 =====================================================================================*/
#define WF_TOP_CFG_VON_EINT_STATUS_0_WF_TOP_CFG_VON_EINT_STATUS_0_ADDR WF_TOP_CFG_VON_EINT_STATUS_0_ADDR
#define WF_TOP_CFG_VON_EINT_STATUS_0_WF_TOP_CFG_VON_EINT_STATUS_0_MASK 0xFFFFFFFFu                // WF_TOP_CFG_VON_EINT_STATUS_0[31..0]
#define WF_TOP_CFG_VON_EINT_STATUS_0_WF_TOP_CFG_VON_EINT_STATUS_0_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CFG_VON_EINT_STATUS_1 (0x87002000 + 0x934u)---

    WF_TOP_CFG_VON_EINT_STATUS_1[15..0] - (RO) EINT status of wf_top_cfg_von_eint_b
                                     0: EINT happens
                                     1: EINT not happen
                                     [ 0]= bn2_phy_l2_0_slp_ctrl_state_timeout_b
                                     [ 1]= bn2_phy_l2_1_slp_ctrl_state_timeout_b
                                     [ 2]= bn2_phy_l2_2_slp_ctrl_state_timeout_b
                                     [ 3]= bn2_phy_l2_3_slp_ctrl_state_timeout_b
                                     [ 4]= bn2_phy_l2_4_slp_ctrl_state_timeout_b
                                     [ 5]= bn3_phy_l2_0_slp_ctrl_state_timeout_b
                                     [ 6]= bn3_phy_l2_1_slp_ctrl_state_timeout_b
                                     [ 7]= bn3_phy_l2_2_slp_ctrl_state_timeout_b
                                     [ 8]= bn3_phy_l2_3_slp_ctrl_state_timeout_b
                                     [ 9]= bn3_phy_l2_4_slp_ctrl_state_timeout_b
                                     [10]= bn0_phy_dsp_slp_ctrl_state_timeout_b
                                     [11]= bn1_phy_dsp_slp_ctrl_state_timeout_b
                                     [12]= bn2_phy_dsp_slp_ctrl_state_timeout_b
                                     [13]= bn3_phy_dsp_slp_ctrl_state_timeout_b
                                     [14]= wf_top_bus_gfck_chk_fail_irq_b
                                     [15]= wf_top_mcu_gfck_chk_fail_irq_b
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_EINT_STATUS_1_WF_TOP_CFG_VON_EINT_STATUS_1_ADDR WF_TOP_CFG_VON_EINT_STATUS_1_ADDR
#define WF_TOP_CFG_VON_EINT_STATUS_1_WF_TOP_CFG_VON_EINT_STATUS_1_MASK 0x0000FFFFu                // WF_TOP_CFG_VON_EINT_STATUS_1[15..0]
#define WF_TOP_CFG_VON_EINT_STATUS_1_WF_TOP_CFG_VON_EINT_STATUS_1_SHFT 0u

/* =====================================================================================

  ---VON_APB_DECODER_CTL_0 (0x87002000 + 0xA30u)---

    cr_apb_decoder_way_en[15..0] - (RW) Bus way_en for APB decoder
                                     0: disable (block access)
                                     1: enable (allow access)
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_APB_DECODER_CTL_0_cr_apb_decoder_way_en_ADDR WF_TOP_CFG_VON_VON_APB_DECODER_CTL_0_ADDR
#define WF_TOP_CFG_VON_VON_APB_DECODER_CTL_0_cr_apb_decoder_way_en_MASK 0x0000FFFFu                // cr_apb_decoder_way_en[15..0]
#define WF_TOP_CFG_VON_VON_APB_DECODER_CTL_0_cr_apb_decoder_way_en_SHFT 0u

/* =====================================================================================

  ---VON_APB_DECODER_STAT_0 (0x87002000 + 0xA34u)---

    ro_apb_decoder_err_paddr[15..0] - (RO)  xxx 
    ro_apb_decoder_ctrl_update[16] - (RO)  xxx 
    ro_apb_decoder_dec_err[17]   - (RO)  xxx 
    ro_apb_decoder_err_psecure_b[18] - (RO)  xxx 
    ro_apb_decoder_err_pwrite[19] - (RO)  xxx 
    ro_apb_decoder_idle[20]      - (RO)  xxx 
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_idle_ADDR WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_idle_MASK 0x00100000u                // ro_apb_decoder_idle[20]
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_idle_SHFT 20u
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_err_pwrite_ADDR WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_err_pwrite_MASK 0x00080000u                // ro_apb_decoder_err_pwrite[19]
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_err_pwrite_SHFT 19u
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_err_psecure_b_ADDR WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_err_psecure_b_MASK 0x00040000u                // ro_apb_decoder_err_psecure_b[18]
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_err_psecure_b_SHFT 18u
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_dec_err_ADDR WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_dec_err_MASK 0x00020000u                // ro_apb_decoder_dec_err[17]
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_dec_err_SHFT 17u
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_ctrl_update_ADDR WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_ctrl_update_MASK 0x00010000u                // ro_apb_decoder_ctrl_update[16]
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_ctrl_update_SHFT 16u
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_err_paddr_ADDR WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ADDR
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_err_paddr_MASK 0x0000FFFFu                // ro_apb_decoder_err_paddr[15..0]
#define WF_TOP_CFG_VON_VON_APB_DECODER_STAT_0_ro_apb_decoder_err_paddr_SHFT 0u

/* =====================================================================================

  ---VON_VDNR_BUS_0 (0x87002000 + 0xA38u)---

    RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_ADDR[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_VDNR_BUS_0_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_ADDR_ADDR WF_TOP_CFG_VON_VON_VDNR_BUS_0_ADDR
#define WF_TOP_CFG_VON_VON_VDNR_BUS_0_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_ADDR_MASK 0xFFFFFFFFu                // RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_ADDR[31..0]
#define WF_TOP_CFG_VON_VON_VDNR_BUS_0_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_ADDR_SHFT 0u

/* =====================================================================================

  ---VON_VDNR_BUS_1 (0x87002000 + 0xA3Cu)---

    RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_WR[0] - (RO)  xxx 
    RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_RD[1] - (RO)  xxx 
    RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_ID[9..2] - (RO)  xxx 
    RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_DOMAIN[13..10] - (RO)  xxx 
    RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_IRQ[14] - (RO)  xxx 
    RESERVED15[30..15]           - (RO) Reserved bits
    CR_WF_TOP_MISC_VON_VDNR_BUS_LATCH_FUNC_EN[31] - (RW)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_CR_WF_TOP_MISC_VON_VDNR_BUS_LATCH_FUNC_EN_ADDR WF_TOP_CFG_VON_VON_VDNR_BUS_1_ADDR
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_CR_WF_TOP_MISC_VON_VDNR_BUS_LATCH_FUNC_EN_MASK 0x80000000u                // CR_WF_TOP_MISC_VON_VDNR_BUS_LATCH_FUNC_EN[31]
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_CR_WF_TOP_MISC_VON_VDNR_BUS_LATCH_FUNC_EN_SHFT 31u
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_IRQ_ADDR WF_TOP_CFG_VON_VON_VDNR_BUS_1_ADDR
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_IRQ_MASK 0x00004000u                // RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_IRQ[14]
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_IRQ_SHFT 14u
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_DOMAIN_ADDR WF_TOP_CFG_VON_VON_VDNR_BUS_1_ADDR
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_DOMAIN_MASK 0x00003C00u                // RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_DOMAIN[13..10]
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_DOMAIN_SHFT 10u
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_ID_ADDR WF_TOP_CFG_VON_VON_VDNR_BUS_1_ADDR
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_ID_MASK 0x000003FCu                // RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_ID[9..2]
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_ID_SHFT 2u
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_RD_ADDR WF_TOP_CFG_VON_VON_VDNR_BUS_1_ADDR
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_RD_MASK 0x00000002u                // RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_RD[1]
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_RD_SHFT 1u
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_WR_ADDR WF_TOP_CFG_VON_VON_VDNR_BUS_1_ADDR
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_WR_MASK 0x00000001u                // RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_WR[0]
#define WF_TOP_CFG_VON_VON_VDNR_BUS_1_RO_WF_TOP_MISC_VON_VDNR_BUS_AHB_D2_VIO_WR_SHFT 0u

/* =====================================================================================

  ---WF_SLEEP_WM_IRQ_CONTROL_0 (0x87002000 + 0xB00u)---

    WF_SLEEP_WM_IRQ_CONTROL_0[31..0] - (RW) IRQ will be one of the source of wf_mcu_pwr_on_src, we keep this connac3 napping sleep feature in case connac5 IRQ/EINT is not properly inventory. Default we "mask" all IRQ source.
                                     0: mask
                                     1: un-mask

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_0_WF_SLEEP_WM_IRQ_CONTROL_0_ADDR WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_0_ADDR
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_0_WF_SLEEP_WM_IRQ_CONTROL_0_MASK 0xFFFFFFFFu                // WF_SLEEP_WM_IRQ_CONTROL_0[31..0]
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_0_WF_SLEEP_WM_IRQ_CONTROL_0_SHFT 0u

/* =====================================================================================

  ---WF_SLEEP_WM_IRQ_CONTROL_1 (0x87002000 + 0xB04u)---

    WF_SLEEP_WM_IRQ_CONTROL_1[31..0] - (RW) IRQ will be one of the source of wf_mcu_pwr_on_src, we keep this connac3 napping sleep feature in case connac5 IRQ/EINT is not properly inventory. Default we "mask" all IRQ source.
                                     0: mask
                                     1: un-mask

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_1_WF_SLEEP_WM_IRQ_CONTROL_1_ADDR WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_1_ADDR
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_1_WF_SLEEP_WM_IRQ_CONTROL_1_MASK 0xFFFFFFFFu                // WF_SLEEP_WM_IRQ_CONTROL_1[31..0]
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_1_WF_SLEEP_WM_IRQ_CONTROL_1_SHFT 0u

/* =====================================================================================

  ---WF_SLEEP_WM_IRQ_CONTROL_2 (0x87002000 + 0xB08u)---

    WF_SLEEP_WM_IRQ_CONTROL_2[31..0] - (RW) IRQ will be one of the source of wf_mcu_pwr_on_src, we keep this connac3 napping sleep feature in case connac5 IRQ/EINT is not properly inventory. Default we "mask" all IRQ source.
                                     0: mask
                                     1: un-mask

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_2_WF_SLEEP_WM_IRQ_CONTROL_2_ADDR WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_2_ADDR
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_2_WF_SLEEP_WM_IRQ_CONTROL_2_MASK 0xFFFFFFFFu                // WF_SLEEP_WM_IRQ_CONTROL_2[31..0]
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_2_WF_SLEEP_WM_IRQ_CONTROL_2_SHFT 0u

/* =====================================================================================

  ---WF_SLEEP_WM_IRQ_CONTROL_3 (0x87002000 + 0xB0Cu)---

    WF_SLEEP_WM_IRQ_CONTROL_3[31..0] - (RW) IRQ will be one of the source of wf_mcu_pwr_on_src, we keep this connac3 napping sleep feature in case connac5 IRQ/EINT is not properly inventory. Default we "mask" all IRQ source.
                                     0: mask
                                     1: un-mask

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_3_WF_SLEEP_WM_IRQ_CONTROL_3_ADDR WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_3_ADDR
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_3_WF_SLEEP_WM_IRQ_CONTROL_3_MASK 0xFFFFFFFFu                // WF_SLEEP_WM_IRQ_CONTROL_3[31..0]
#define WF_TOP_CFG_VON_WF_SLEEP_WM_IRQ_CONTROL_3_WF_SLEEP_WM_IRQ_CONTROL_3_SHFT 0u

/* =====================================================================================

  ---WF_SLEEP_WA_IRQ_CONTROL_0 (0x87002000 + 0xB10u)---

    WF_SLEEP_WA_IRQ_CONTROL_0[31..0] - (RW) IRQ will be one of the source of wf_mcu_pwr_on_src, we keep this connac3 napping sleep feature in case connac5 IRQ/EINT is not properly inventory. Default we "mask" all IRQ source.
                                     0: mask
                                     1: un-mask

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_SLEEP_WA_IRQ_CONTROL_0_WF_SLEEP_WA_IRQ_CONTROL_0_ADDR WF_TOP_CFG_VON_WF_SLEEP_WA_IRQ_CONTROL_0_ADDR
#define WF_TOP_CFG_VON_WF_SLEEP_WA_IRQ_CONTROL_0_WF_SLEEP_WA_IRQ_CONTROL_0_MASK 0xFFFFFFFFu                // WF_SLEEP_WA_IRQ_CONTROL_0[31..0]
#define WF_TOP_CFG_VON_WF_SLEEP_WA_IRQ_CONTROL_0_WF_SLEEP_WA_IRQ_CONTROL_0_SHFT 0u

/* =====================================================================================

  ---WF_SLEEP_WA_IRQ_CONTROL_1 (0x87002000 + 0xB14u)---

    WF_SLEEP_WA_IRQ_CONTROL_1[31..0] - (RW) IRQ will be one of the source of wf_mcu_pwr_on_src, we keep this connac3 napping sleep feature in case connac5 IRQ/EINT is not properly inventory. Default we "mask" all IRQ source.
                                     0: mask
                                     1: un-mask

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_SLEEP_WA_IRQ_CONTROL_1_WF_SLEEP_WA_IRQ_CONTROL_1_ADDR WF_TOP_CFG_VON_WF_SLEEP_WA_IRQ_CONTROL_1_ADDR
#define WF_TOP_CFG_VON_WF_SLEEP_WA_IRQ_CONTROL_1_WF_SLEEP_WA_IRQ_CONTROL_1_MASK 0xFFFFFFFFu                // WF_SLEEP_WA_IRQ_CONTROL_1[31..0]
#define WF_TOP_CFG_VON_WF_SLEEP_WA_IRQ_CONTROL_1_WF_SLEEP_WA_IRQ_CONTROL_1_SHFT 0u

/* =====================================================================================

  ---VON_CMDBT_SYSRAM_CTRL_0 (0x87002000 + 0xC00u)---

    CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_X_SRAMROM_RAM_DELSEL[19..0] - (RW) Memory delay select
    CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_X_MBIST_USE_DEFAULT_DELSEL[20] - (RW) Memory use default delay select
                                     0: use cr_wf_top_misc_von_cmdbt_sysram_x_sramrom_ram_delsel value
                                     1: use default value
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_0_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_X_MBIST_USE_DEFAULT_DELSEL_ADDR WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_0_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_0_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_X_MBIST_USE_DEFAULT_DELSEL_MASK 0x00100000u                // CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_X_MBIST_USE_DEFAULT_DELSEL[20]
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_0_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_X_MBIST_USE_DEFAULT_DELSEL_SHFT 20u
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_0_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_X_SRAMROM_RAM_DELSEL_ADDR WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_0_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_0_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_X_SRAMROM_RAM_DELSEL_MASK 0x000FFFFFu                // CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_X_SRAMROM_RAM_DELSEL[19..0]
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_0_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_X_SRAMROM_RAM_DELSEL_SHFT 0u

/* =====================================================================================

  ---VON_CMDBT_SYSRAM_CTRL_1 (0x87002000 + 0xC04u)---

    CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_Y_SRAMROM_RAM_DELSEL[19..0] - (RW) Memory delay select
    CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_Y_MBIST_USE_DEFAULT_DELSEL[20] - (RW) Memory use default delay select
                                     0: use cr_wf_top_misc_von_cmdbt_sysram_x_sramrom_ram_delsel value
                                     1: use default value
    RESERVED21[31..21]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_1_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_Y_MBIST_USE_DEFAULT_DELSEL_ADDR WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_1_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_1_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_Y_MBIST_USE_DEFAULT_DELSEL_MASK 0x00100000u                // CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_Y_MBIST_USE_DEFAULT_DELSEL[20]
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_1_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_Y_MBIST_USE_DEFAULT_DELSEL_SHFT 20u
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_1_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_Y_SRAMROM_RAM_DELSEL_ADDR WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_1_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_1_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_Y_SRAMROM_RAM_DELSEL_MASK 0x000FFFFFu                // CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_Y_SRAMROM_RAM_DELSEL[19..0]
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_1_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_Y_SRAMROM_RAM_DELSEL_SHFT 0u

/* =====================================================================================

  ---VON_CMDBT_SYSRAM_CTRL_2 (0x87002000 + 0xC08u)---

    CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_PD_SEL_SCAN[3..0] - (RW) To decide memory PD value in scan mode
                                     0: power on
                                     1: power down
    CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_CLR[4] - (RW) To clear memory error latch
    RESERVED5[15..5]             - (RO) Reserved bits
    RO_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_ADR[31..16] - (RO) When memory is accessed at power down/ sleep mode, the illegal access address will be latched

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_RO_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_ADR_ADDR WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_RO_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_ADR_MASK 0xFFFF0000u                // RO_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_ADR[31..16]
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_RO_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_ADR_SHFT 16u
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_CLR_ADDR WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_CLR_MASK 0x00000010u                // CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_CLR[4]
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_CLR_SHFT 4u
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_PD_SEL_SCAN_ADDR WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_PD_SEL_SCAN_MASK 0x0000000Fu                // CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_PD_SEL_SCAN[3..0]
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_2_CR_WF_TOP_MISC_VON_CMDBT_SYSRAM_PD_SEL_SCAN_SHFT 0u

/* =====================================================================================

  ---VON_CMDBT_SYSRAM_CTRL_3 (0x87002000 + 0xC0Cu)---

    RO_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_INFO[31..0] - (RO) When memory is accessed at power down/ sleep mode, the illegal access information will be latched
                                     [0]=sysram_err_int
                                     [1]=sysram_err_rw_flg (0:read/ 1:write)
                                     [23:16]=ahb bus id

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_3_RO_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_INFO_ADDR WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_3_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_3_RO_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_INFO_MASK 0xFFFFFFFFu                // RO_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_INFO[31..0]
#define WF_TOP_CFG_VON_VON_CMDBT_SYSRAM_CTRL_3_RO_WF_TOP_MISC_VON_CMDBT_SYSRAM_ERR_INFO_SHFT 0u

/* =====================================================================================

  ---VON_CMDBT_CTL (0x87002000 + 0xC10u)---

    CR_CMDBT_MEM_WRITE_DIS[0]    - (RW) disable command batch writing "DLM" and "external BUS memory"
    CR_CMDBT_AHB_DIS[1]          - (RW) disable command batch using "external BUS memory" path
    CR_CMDBT_DLM_DIS[2]          - (RW) disable command batch using "DLM" path
    CR_CMDBT_THIN_DLM_REQ_DIS[3] - (RW)  xxx 
    CR_CMDBT_FIX_EXTRA_FETCH_EN[4] - (RW) fix extra fetch function enable
    CR_CMDBT_JMP_RST_EN[5]       - (RW) jump reset functoin enable
    RESERVED6[31..6]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_JMP_RST_EN_ADDR  WF_TOP_CFG_VON_VON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_JMP_RST_EN_MASK  0x00000020u                // CR_CMDBT_JMP_RST_EN[5]
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_JMP_RST_EN_SHFT  5u
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_FIX_EXTRA_FETCH_EN_ADDR WF_TOP_CFG_VON_VON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_FIX_EXTRA_FETCH_EN_MASK 0x00000010u                // CR_CMDBT_FIX_EXTRA_FETCH_EN[4]
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_FIX_EXTRA_FETCH_EN_SHFT 4u
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_THIN_DLM_REQ_DIS_ADDR WF_TOP_CFG_VON_VON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_THIN_DLM_REQ_DIS_MASK 0x00000008u                // CR_CMDBT_THIN_DLM_REQ_DIS[3]
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_THIN_DLM_REQ_DIS_SHFT 3u
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_DLM_DIS_ADDR     WF_TOP_CFG_VON_VON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_DLM_DIS_MASK     0x00000004u                // CR_CMDBT_DLM_DIS[2]
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_DLM_DIS_SHFT     2u
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_AHB_DIS_ADDR     WF_TOP_CFG_VON_VON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_AHB_DIS_MASK     0x00000002u                // CR_CMDBT_AHB_DIS[1]
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_AHB_DIS_SHFT     1u
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_MEM_WRITE_DIS_ADDR WF_TOP_CFG_VON_VON_CMDBT_CTL_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_MEM_WRITE_DIS_MASK 0x00000001u                // CR_CMDBT_MEM_WRITE_DIS[0]
#define WF_TOP_CFG_VON_VON_CMDBT_CTL_CR_CMDBT_MEM_WRITE_DIS_SHFT 0u

/* =====================================================================================

  ---VON_CMDBT_MEM_ADDR_PREFIX (0x87002000 + 0xC14u)---

    RESERVED0[18..0]             - (RO) Reserved bits
    CR_CMDBT_EXT_MEM_ADDR_PREFIX[31..19] - (RW) prefix address of command batch backup/restore "instruction, address, and data" memory by "external BUS memory"
                                     Note: the memory which is wfsys's bus structure slave can be "external BUS memory" (0x8701_0000 ==> [31:19] = 0x10E0)

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_CMDBT_MEM_ADDR_PREFIX_CR_CMDBT_EXT_MEM_ADDR_PREFIX_ADDR WF_TOP_CFG_VON_VON_CMDBT_MEM_ADDR_PREFIX_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_MEM_ADDR_PREFIX_CR_CMDBT_EXT_MEM_ADDR_PREFIX_MASK 0xFFF80000u                // CR_CMDBT_EXT_MEM_ADDR_PREFIX[31..19]
#define WF_TOP_CFG_VON_VON_CMDBT_MEM_ADDR_PREFIX_CR_CMDBT_EXT_MEM_ADDR_PREFIX_SHFT 19u

/* =====================================================================================

  ---VON_CMDBT_MEM_ADDR_PREFIX_1 (0x87002000 + 0xC18u)---

    RESERVED0[18..0]             - (RO) Reserved bits
    CR_CMDBT_EXT_MEM_ADDR_PREFIX_1[31..19] - (RW) prefix address of command batch backup/restore "instruction, address, and data" memory by "external BUS memory"
                                     Note: the memory which is wfsys's bus structure slave can be "external BUS memory" (0x8701_0000 ==> [31:19] = 0x10E0)

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_CMDBT_MEM_ADDR_PREFIX_1_CR_CMDBT_EXT_MEM_ADDR_PREFIX_1_ADDR WF_TOP_CFG_VON_VON_CMDBT_MEM_ADDR_PREFIX_1_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_MEM_ADDR_PREFIX_1_CR_CMDBT_EXT_MEM_ADDR_PREFIX_1_MASK 0xFFF80000u                // CR_CMDBT_EXT_MEM_ADDR_PREFIX_1[31..19]
#define WF_TOP_CFG_VON_VON_CMDBT_MEM_ADDR_PREFIX_1_CR_CMDBT_EXT_MEM_ADDR_PREFIX_1_SHFT 19u

/* =====================================================================================

  ---VON_CMDBT_FETCH_START_ADDR_BK (0x87002000 + 0xC1Cu)---

    CR_VON_CMDBT_FETCH_START_ADDR_BK[19..0] - (RW) VON cmdbt instr bk start address
    RESERVED20[31..20]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_CMDBT_FETCH_START_ADDR_BK_CR_VON_CMDBT_FETCH_START_ADDR_BK_ADDR WF_TOP_CFG_VON_VON_CMDBT_FETCH_START_ADDR_BK_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_FETCH_START_ADDR_BK_CR_VON_CMDBT_FETCH_START_ADDR_BK_MASK 0x000FFFFFu                // CR_VON_CMDBT_FETCH_START_ADDR_BK[19..0]
#define WF_TOP_CFG_VON_VON_CMDBT_FETCH_START_ADDR_BK_CR_VON_CMDBT_FETCH_START_ADDR_BK_SHFT 0u

/* =====================================================================================

  ---VON_CMDBT_FETCH_START_ADDR_RS (0x87002000 + 0xC20u)---

    CR_VON_CMDBT_FETCH_START_ADDR_RS[19..0] - (RW) VON cmdbt instr rs start address
    RESERVED20[31..20]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_VON_CMDBT_FETCH_START_ADDR_RS_CR_VON_CMDBT_FETCH_START_ADDR_RS_ADDR WF_TOP_CFG_VON_VON_CMDBT_FETCH_START_ADDR_RS_ADDR
#define WF_TOP_CFG_VON_VON_CMDBT_FETCH_START_ADDR_RS_CR_VON_CMDBT_FETCH_START_ADDR_RS_MASK 0x000FFFFFu                // CR_VON_CMDBT_FETCH_START_ADDR_RS[19..0]
#define WF_TOP_CFG_VON_VON_CMDBT_FETCH_START_ADDR_RS_CR_VON_CMDBT_FETCH_START_ADDR_RS_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_CONTROL_ENABLE_MCU (0x87002000 + 0xC30u)---

    CR_HW_CMDBT_CONTROL_ENABLE_MCU[23..0] - (RW) CR for MCU CMDBT control enable
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_MCU_CR_HW_CMDBT_CONTROL_ENABLE_MCU_ADDR WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_MCU_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_MCU_CR_HW_CMDBT_CONTROL_ENABLE_MCU_MASK 0x00FFFFFFu                // CR_HW_CMDBT_CONTROL_ENABLE_MCU[23..0]
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_MCU_CR_HW_CMDBT_CONTROL_ENABLE_MCU_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_CONTROL_ENABLE_UMAC (0x87002000 + 0xC34u)---

    CR_HW_CMDBT_CONTROL_ENABLE_UMAC[3..0] - (RW) CR for UMAC CMDBT control enable
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_UMAC_CR_HW_CMDBT_CONTROL_ENABLE_UMAC_ADDR WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_UMAC_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_UMAC_CR_HW_CMDBT_CONTROL_ENABLE_UMAC_MASK 0x0000000Fu                // CR_HW_CMDBT_CONTROL_ENABLE_UMAC[3..0]
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_UMAC_CR_HW_CMDBT_CONTROL_ENABLE_UMAC_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_CONTROL_ENABLE_LMAC (0x87002000 + 0xC38u)---

    CR_HW_CMDBT_CONTROL_ENABLE_LMAC[7..0] - (RW) CR for LMAC CMDBT control enable
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_LMAC_CR_HW_CMDBT_CONTROL_ENABLE_LMAC_ADDR WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_LMAC_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_LMAC_CR_HW_CMDBT_CONTROL_ENABLE_LMAC_MASK 0x000000FFu                // CR_HW_CMDBT_CONTROL_ENABLE_LMAC[7..0]
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_LMAC_CR_HW_CMDBT_CONTROL_ENABLE_LMAC_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_CONTROL_ENABLE_LIT (0x87002000 + 0xC3Cu)---

    CR_HW_CMDBT_CONTROL_ENABLE_LIT[3..0] - (RW) CR for LIT CMDBT control enable
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_LIT_CR_HW_CMDBT_CONTROL_ENABLE_LIT_ADDR WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_LIT_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_LIT_CR_HW_CMDBT_CONTROL_ENABLE_LIT_MASK 0x0000000Fu                // CR_HW_CMDBT_CONTROL_ENABLE_LIT[3..0]
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_LIT_CR_HW_CMDBT_CONTROL_ENABLE_LIT_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_CONTROL_ENABLE_PHY (0x87002000 + 0xC40u)---

    CR_HW_CMDBT_CONTROL_ENABLE_PHY[7..0] - (RW) CR for single PHY CMDBT control enable
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_PHY_CR_HW_CMDBT_CONTROL_ENABLE_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_PHY_CR_HW_CMDBT_CONTROL_ENABLE_PHY_MASK 0x000000FFu                // CR_HW_CMDBT_CONTROL_ENABLE_PHY[7..0]
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_PHY_CR_HW_CMDBT_CONTROL_ENABLE_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_CONTROL_ENABLE_BN0_PHY (0x87002000 + 0xC44u)---

    CR_HW_CMDBT_CONTROL_ENABLE_BN0_PHY[13..0] - (RW) CR for BN0 PHY CMDBT control enable
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN0_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN0_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN0_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN0_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN0_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_CONTROL_ENABLE_BN0_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN0_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN0_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_CONTROL_ENABLE_BN1_PHY (0x87002000 + 0xC48u)---

    CR_HW_CMDBT_CONTROL_ENABLE_BN1_PHY[13..0] - (RW) CR for BN1 PHY CMDBT control enable
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN1_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN1_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN1_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN1_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN1_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_CONTROL_ENABLE_BN1_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN1_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN1_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_CONTROL_ENABLE_BN2_PHY (0x87002000 + 0xC4Cu)---

    CR_HW_CMDBT_CONTROL_ENABLE_BN2_PHY[13..0] - (RW) CR for BN2 PHY CMDBT control enable
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN2_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN2_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN2_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN2_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN2_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_CONTROL_ENABLE_BN2_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN2_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN2_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_CONTROL_ENABLE_BN3_PHY (0x87002000 + 0xC50u)---

    CR_HW_CMDBT_CONTROL_ENABLE_BN3_PHY[13..0] - (RW) CR for BN3 PHY CMDBT control enable
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN3_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN3_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN3_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN3_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN3_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_CONTROL_ENABLE_BN3_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_CONTROL_ENABLE_BN3_PHY_CR_HW_CMDBT_CONTROL_ENABLE_BN3_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_SIGNAL_MCU (0x87002000 + 0xC60u)---

    CR_HW_CMDBT_MANUAL_MODE_SIGNAL_MCU[23..0] - (RW) manual cmdbt trigger for MCU CMDBT
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_MCU_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_MCU_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_MCU_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_MCU_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_MCU_MASK 0x00FFFFFFu                // CR_HW_CMDBT_MANUAL_MODE_SIGNAL_MCU[23..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_MCU_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_MCU_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC (0x87002000 + 0xC64u)---

    CR_HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC[3..0] - (RW) manual cmdbt trigger for UMAC CMDBT
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC_MASK 0x0000000Fu                // CR_HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC[3..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_UMAC_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC (0x87002000 + 0xC68u)---

    CR_HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC[7..0] - (RW) manual cmdbt trigger for LMAC CMDBT
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC_MASK 0x000000FFu                // CR_HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC[7..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_LMAC_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_SIGNAL_LIT (0x87002000 + 0xC6Cu)---

    CR_HW_CMDBT_MANUAL_MODE_SIGNAL_LIT[3..0] - (RW) manual cmdbt trigger for LIT CMDBT
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_LIT_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_LIT_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_LIT_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_LIT_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_LIT_MASK 0x0000000Fu                // CR_HW_CMDBT_MANUAL_MODE_SIGNAL_LIT[3..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_LIT_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_LIT_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_SIGNAL_PHY (0x87002000 + 0xC70u)---

    CR_HW_CMDBT_MANUAL_MODE_SIGNAL_PHY[7..0] - (RW) manual cmdbt trigger for BN0 PHY CMDBT
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_PHY_MASK 0x000000FFu                // CR_HW_CMDBT_MANUAL_MODE_SIGNAL_PHY[7..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY (0x87002000 + 0xC74u)---

    CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY[13..0] - (RW) manual cmdbt trigger for single PHY CMDBT
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN0_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY (0x87002000 + 0xC78u)---

    CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY[13..0] - (RW) manual cmdbt trigger for BN1 PHY CMDBT
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN1_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY (0x87002000 + 0xC7Cu)---

    CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY[13..0] - (RW) manual cmdbt trigger for BN2 PHY CMDBT
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN2_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY (0x87002000 + 0xC80u)---

    CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY[13..0] - (RW) manual cmdbt trigger for BN3 PHY CMDBT
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY_CR_HW_CMDBT_MANUAL_MODE_SIGNAL_BN3_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_MCU (0x87002000 + 0xC90u)---

    CR_HW_CMDBT_MANUAL_MODE_MCU[23..0] - (RW) manual cmdbt trigger for MCU CMDBT
    RESERVED24[31..24]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_MCU_CR_HW_CMDBT_MANUAL_MODE_MCU_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_MCU_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_MCU_CR_HW_CMDBT_MANUAL_MODE_MCU_MASK 0x00FFFFFFu                // CR_HW_CMDBT_MANUAL_MODE_MCU[23..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_MCU_CR_HW_CMDBT_MANUAL_MODE_MCU_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_UMAC (0x87002000 + 0xC94u)---

    CR_HW_CMDBT_MANUAL_MODE_UMAC[3..0] - (RW) manual cmdbt trigger for UMAC CMDBT
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_UMAC_CR_HW_CMDBT_MANUAL_MODE_UMAC_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_UMAC_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_UMAC_CR_HW_CMDBT_MANUAL_MODE_UMAC_MASK 0x0000000Fu                // CR_HW_CMDBT_MANUAL_MODE_UMAC[3..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_UMAC_CR_HW_CMDBT_MANUAL_MODE_UMAC_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_LMAC (0x87002000 + 0xC98u)---

    CR_HW_CMDBT_MANUAL_MODE_LMAC[7..0] - (RW) manual cmdbt trigger for LMAC CMDBT
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_LMAC_CR_HW_CMDBT_MANUAL_MODE_LMAC_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_LMAC_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_LMAC_CR_HW_CMDBT_MANUAL_MODE_LMAC_MASK 0x000000FFu                // CR_HW_CMDBT_MANUAL_MODE_LMAC[7..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_LMAC_CR_HW_CMDBT_MANUAL_MODE_LMAC_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_LIT (0x87002000 + 0xC9Cu)---

    CR_HW_CMDBT_MANUAL_MODE_LIT[3..0] - (RW) manual cmdbt trigger for LIT CMDBT
    RESERVED4[31..4]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_LIT_CR_HW_CMDBT_MANUAL_MODE_LIT_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_LIT_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_LIT_CR_HW_CMDBT_MANUAL_MODE_LIT_MASK 0x0000000Fu                // CR_HW_CMDBT_MANUAL_MODE_LIT[3..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_LIT_CR_HW_CMDBT_MANUAL_MODE_LIT_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_PHY (0x87002000 + 0xCA0u)---

    CR_HW_CMDBT_MANUAL_MODE_PHY[7..0] - (RW) manual cmdbt trigger for single PHY CMDBT
    RESERVED8[31..8]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_PHY_CR_HW_CMDBT_MANUAL_MODE_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_PHY_CR_HW_CMDBT_MANUAL_MODE_PHY_MASK 0x000000FFu                // CR_HW_CMDBT_MANUAL_MODE_PHY[7..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_PHY_CR_HW_CMDBT_MANUAL_MODE_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_BN0_PHY (0x87002000 + 0xCA4u)---

    CR_HW_CMDBT_MANUAL_MODE_BN0_PHY[13..0] - (RW) manual cmdbt trigger for BN0 PHY CMDBT
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN0_PHY_CR_HW_CMDBT_MANUAL_MODE_BN0_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN0_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN0_PHY_CR_HW_CMDBT_MANUAL_MODE_BN0_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_MANUAL_MODE_BN0_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN0_PHY_CR_HW_CMDBT_MANUAL_MODE_BN0_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_BN1_PHY (0x87002000 + 0xCA8u)---

    CR_HW_CMDBT_MANUAL_MODE_BN1_PHY[13..0] - (RW) manual cmdbt trigger for BN1 PHY CMDBT
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN1_PHY_CR_HW_CMDBT_MANUAL_MODE_BN1_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN1_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN1_PHY_CR_HW_CMDBT_MANUAL_MODE_BN1_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_MANUAL_MODE_BN1_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN1_PHY_CR_HW_CMDBT_MANUAL_MODE_BN1_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_BN2_PHY (0x87002000 + 0xCACu)---

    CR_HW_CMDBT_MANUAL_MODE_BN2_PHY[13..0] - (RW) manual cmdbt trigger for BN2 PHY CMDBT
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN2_PHY_CR_HW_CMDBT_MANUAL_MODE_BN2_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN2_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN2_PHY_CR_HW_CMDBT_MANUAL_MODE_BN2_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_MANUAL_MODE_BN2_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN2_PHY_CR_HW_CMDBT_MANUAL_MODE_BN2_PHY_SHFT 0u

/* =====================================================================================

  ---HW_CMDBT_MANUAL_MODE_BN3_PHY (0x87002000 + 0xCB0u)---

    CR_HW_CMDBT_MANUAL_MODE_BN3_PHY[13..0] - (RW) manual cmdbt trigger for BN3 PHY CMDBT
    RESERVED14[31..14]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN3_PHY_CR_HW_CMDBT_MANUAL_MODE_BN3_PHY_ADDR WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN3_PHY_ADDR
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN3_PHY_CR_HW_CMDBT_MANUAL_MODE_BN3_PHY_MASK 0x00003FFFu                // CR_HW_CMDBT_MANUAL_MODE_BN3_PHY[13..0]
#define WF_TOP_CFG_VON_HW_CMDBT_MANUAL_MODE_BN3_PHY_CR_HW_CMDBT_MANUAL_MODE_BN3_PHY_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_WRAP_DBG_SEL (0x87002000 + 0xCC0u)---

    CR_WF_TOP_CMDBT_CTL_WRAP_DBG_SEL[4..0] - (RW) debug sel
    RESERVED5[31..5]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_WRAP_DBG_SEL_CR_WF_TOP_CMDBT_CTL_WRAP_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_WRAP_DBG_SEL_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_WRAP_DBG_SEL_CR_WF_TOP_CMDBT_CTL_WRAP_DBG_SEL_MASK 0x0000001Fu                // CR_WF_TOP_CMDBT_CTL_WRAP_DBG_SEL[4..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_WRAP_DBG_SEL_CR_WF_TOP_CMDBT_CTL_WRAP_DBG_SEL_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG (0x87002000 + 0xCC4u)---

    RO_WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG[31..0] - (RO) debug flag

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_WRAP_DBG_FLAG_SHFT 0u

/* =====================================================================================

  ---CMDBT_USE_PLL (0x87002000 + 0xCD0u)---

    CR_CMDBT_USE_PLL_MCU[0]      - (RW)  xxx 
    CR_CMDBT_USE_PLL_UMAC[1]     - (RW)  xxx 
    CR_CMDBT_USE_PLL_LMAC[2]     - (RW)  xxx 
    CR_CMDBT_USE_PLL_LIT[3]      - (RW)  xxx 
    CR_CMDBT_USE_PLL_PHY[4]      - (RW)  xxx 
    CR_CMDBT_USE_PLL_BN0_PHY[5]  - (RW)  xxx 
    CR_CMDBT_USE_PLL_BN1_PHY[6]  - (RW)  xxx 
    CR_CMDBT_USE_PLL_BN2_PHY[7]  - (RW)  xxx 
    CR_CMDBT_USE_PLL_BN3_PHY[8]  - (RW)  xxx 
    RESERVED9[31..9]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN3_PHY_ADDR WF_TOP_CFG_VON_CMDBT_USE_PLL_ADDR
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN3_PHY_MASK 0x00000100u                // CR_CMDBT_USE_PLL_BN3_PHY[8]
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN3_PHY_SHFT 8u
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN2_PHY_ADDR WF_TOP_CFG_VON_CMDBT_USE_PLL_ADDR
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN2_PHY_MASK 0x00000080u                // CR_CMDBT_USE_PLL_BN2_PHY[7]
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN2_PHY_SHFT 7u
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN1_PHY_ADDR WF_TOP_CFG_VON_CMDBT_USE_PLL_ADDR
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN1_PHY_MASK 0x00000040u                // CR_CMDBT_USE_PLL_BN1_PHY[6]
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN1_PHY_SHFT 6u
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN0_PHY_ADDR WF_TOP_CFG_VON_CMDBT_USE_PLL_ADDR
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN0_PHY_MASK 0x00000020u                // CR_CMDBT_USE_PLL_BN0_PHY[5]
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_BN0_PHY_SHFT 5u
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_PHY_ADDR WF_TOP_CFG_VON_CMDBT_USE_PLL_ADDR
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_PHY_MASK 0x00000010u                // CR_CMDBT_USE_PLL_PHY[4]
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_PHY_SHFT 4u
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_LIT_ADDR WF_TOP_CFG_VON_CMDBT_USE_PLL_ADDR
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_LIT_MASK 0x00000008u                // CR_CMDBT_USE_PLL_LIT[3]
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_LIT_SHFT 3u
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_LMAC_ADDR WF_TOP_CFG_VON_CMDBT_USE_PLL_ADDR
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_LMAC_MASK 0x00000004u                // CR_CMDBT_USE_PLL_LMAC[2]
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_LMAC_SHFT 2u
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_UMAC_ADDR WF_TOP_CFG_VON_CMDBT_USE_PLL_ADDR
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_UMAC_MASK 0x00000002u                // CR_CMDBT_USE_PLL_UMAC[1]
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_UMAC_SHFT 1u
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_MCU_ADDR WF_TOP_CFG_VON_CMDBT_USE_PLL_ADDR
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_MCU_MASK 0x00000001u                // CR_CMDBT_USE_PLL_MCU[0]
#define WF_TOP_CFG_VON_CMDBT_USE_PLL_CR_CMDBT_USE_PLL_MCU_SHFT 0u

/* =====================================================================================

  ---CMDBT_CTL_CG_BYPASS (0x87002000 + 0xCD4u)---

    CR_CMDBT_CTL_WRAP_CG_BYPASS[0] - (RW)  xxx 
    CR_VON_CMDBT_CTL_CG_BYPASS[1] - (RW)  xxx 
    CR_MCU_CMDBT_CTL_CG_BYPASS[2] - (RW)  xxx 
    CR_UMAC_CMDBT_CTL_CG_BYPASS[3] - (RW)  xxx 
    CR_LMAC_CMDBT_CTL_CG_BYPASS[4] - (RW)  xxx 
    CR_LIT_CMDBT_CTL_CG_BYPASS[5] - (RW)  xxx 
    CR_PHY_CMDBT_CTL_CG_BYPASS[6] - (RW)  xxx 
    CR_BN0_PHY_CMDBT_CTL_CG_BYPASS[7] - (RW)  xxx 
    CR_BN1_PHY_CMDBT_CTL_CG_BYPASS[8] - (RW)  xxx 
    CR_BN2_PHY_CMDBT_CTL_CG_BYPASS[9] - (RW)  xxx 
    CR_BN3_PHY_CMDBT_CTL_CG_BYPASS[10] - (RW)  xxx 
    RESERVED11[31..11]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN3_PHY_CMDBT_CTL_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN3_PHY_CMDBT_CTL_CG_BYPASS_MASK 0x00000400u                // CR_BN3_PHY_CMDBT_CTL_CG_BYPASS[10]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN3_PHY_CMDBT_CTL_CG_BYPASS_SHFT 10u
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN2_PHY_CMDBT_CTL_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN2_PHY_CMDBT_CTL_CG_BYPASS_MASK 0x00000200u                // CR_BN2_PHY_CMDBT_CTL_CG_BYPASS[9]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN2_PHY_CMDBT_CTL_CG_BYPASS_SHFT 9u
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN1_PHY_CMDBT_CTL_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN1_PHY_CMDBT_CTL_CG_BYPASS_MASK 0x00000100u                // CR_BN1_PHY_CMDBT_CTL_CG_BYPASS[8]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN1_PHY_CMDBT_CTL_CG_BYPASS_SHFT 8u
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN0_PHY_CMDBT_CTL_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN0_PHY_CMDBT_CTL_CG_BYPASS_MASK 0x00000080u                // CR_BN0_PHY_CMDBT_CTL_CG_BYPASS[7]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_BN0_PHY_CMDBT_CTL_CG_BYPASS_SHFT 7u
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_PHY_CMDBT_CTL_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_PHY_CMDBT_CTL_CG_BYPASS_MASK 0x00000040u                // CR_PHY_CMDBT_CTL_CG_BYPASS[6]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_PHY_CMDBT_CTL_CG_BYPASS_SHFT 6u
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_LIT_CMDBT_CTL_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_LIT_CMDBT_CTL_CG_BYPASS_MASK 0x00000020u                // CR_LIT_CMDBT_CTL_CG_BYPASS[5]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_LIT_CMDBT_CTL_CG_BYPASS_SHFT 5u
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_LMAC_CMDBT_CTL_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_LMAC_CMDBT_CTL_CG_BYPASS_MASK 0x00000010u                // CR_LMAC_CMDBT_CTL_CG_BYPASS[4]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_LMAC_CMDBT_CTL_CG_BYPASS_SHFT 4u
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_UMAC_CMDBT_CTL_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_UMAC_CMDBT_CTL_CG_BYPASS_MASK 0x00000008u                // CR_UMAC_CMDBT_CTL_CG_BYPASS[3]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_UMAC_CMDBT_CTL_CG_BYPASS_SHFT 3u
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_MCU_CMDBT_CTL_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_MCU_CMDBT_CTL_CG_BYPASS_MASK 0x00000004u                // CR_MCU_CMDBT_CTL_CG_BYPASS[2]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_MCU_CMDBT_CTL_CG_BYPASS_SHFT 2u
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_VON_CMDBT_CTL_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_VON_CMDBT_CTL_CG_BYPASS_MASK 0x00000002u                // CR_VON_CMDBT_CTL_CG_BYPASS[1]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_VON_CMDBT_CTL_CG_BYPASS_SHFT 1u
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_CMDBT_CTL_WRAP_CG_BYPASS_ADDR WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_ADDR
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_CMDBT_CTL_WRAP_CG_BYPASS_MASK 0x00000001u                // CR_CMDBT_CTL_WRAP_CG_BYPASS[0]
#define WF_TOP_CFG_VON_CMDBT_CTL_CG_BYPASS_CR_CMDBT_CTL_WRAP_CG_BYPASS_SHFT 0u

/* =====================================================================================

  ---SW_CMDBT_MANUAL_MODE_SIGNAL_LIT (0x87002000 + 0xCECu)---

    SW_CMDBT_MANUAL_MODE_SIGNAL_LIT[1..0] - (RW) sw manual cmdbt trigger for LIT CMDBT
    RESERVED2[31..2]             - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_SW_CMDBT_MANUAL_MODE_SIGNAL_LIT_SW_CMDBT_MANUAL_MODE_SIGNAL_LIT_ADDR WF_TOP_CFG_VON_SW_CMDBT_MANUAL_MODE_SIGNAL_LIT_ADDR
#define WF_TOP_CFG_VON_SW_CMDBT_MANUAL_MODE_SIGNAL_LIT_SW_CMDBT_MANUAL_MODE_SIGNAL_LIT_MASK 0x00000003u                // SW_CMDBT_MANUAL_MODE_SIGNAL_LIT[1..0]
#define WF_TOP_CFG_VON_SW_CMDBT_MANUAL_MODE_SIGNAL_LIT_SW_CMDBT_MANUAL_MODE_SIGNAL_LIT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_DBG_SEL_0 (0x87002000 + 0xD00u)---

    CR_WF_TOP_CMDBT_CTL_VON_DBG_SEL[4..0] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_VON_DBG_SEL_SWCTL[5] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_MCU_DBG_SEL[10..6] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_MCU_DBG_SEL_SWCTL[11] - (RW)  xxx 
    RESERVED12[31..12]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_MCU_DBG_SEL_SWCTL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_MCU_DBG_SEL_SWCTL_MASK 0x00000800u                // CR_WF_TOP_CMDBT_CTL_MCU_DBG_SEL_SWCTL[11]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_MCU_DBG_SEL_SWCTL_SHFT 11u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_MCU_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_MCU_DBG_SEL_MASK 0x000007C0u                // CR_WF_TOP_CMDBT_CTL_MCU_DBG_SEL[10..6]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_MCU_DBG_SEL_SHFT 6u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_VON_DBG_SEL_SWCTL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_VON_DBG_SEL_SWCTL_MASK 0x00000020u                // CR_WF_TOP_CMDBT_CTL_VON_DBG_SEL_SWCTL[5]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_VON_DBG_SEL_SWCTL_SHFT 5u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_VON_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_VON_DBG_SEL_MASK 0x0000001Fu                // CR_WF_TOP_CMDBT_CTL_VON_DBG_SEL[4..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_0_CR_WF_TOP_CMDBT_CTL_VON_DBG_SEL_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_DBG_SEL_1 (0x87002000 + 0xD04u)---

    CR_WF_TOP_CMDBT_CTL_UMAC_DBG_SEL[4..0] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_UMAC_DBG_SEL_SWCTL[5] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_LMAC_DBG_SEL[10..6] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_LMAC_DBG_SEL_SWCTL[11] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_LIT_DBG_SEL[16..12] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_LIT_DBG_SEL_SWCTL[17] - (RW)  xxx 
    RESERVED18[31..18]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LIT_DBG_SEL_SWCTL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LIT_DBG_SEL_SWCTL_MASK 0x00020000u                // CR_WF_TOP_CMDBT_CTL_LIT_DBG_SEL_SWCTL[17]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LIT_DBG_SEL_SWCTL_SHFT 17u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LIT_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LIT_DBG_SEL_MASK 0x0001F000u                // CR_WF_TOP_CMDBT_CTL_LIT_DBG_SEL[16..12]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LIT_DBG_SEL_SHFT 12u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LMAC_DBG_SEL_SWCTL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LMAC_DBG_SEL_SWCTL_MASK 0x00000800u                // CR_WF_TOP_CMDBT_CTL_LMAC_DBG_SEL_SWCTL[11]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LMAC_DBG_SEL_SWCTL_SHFT 11u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LMAC_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LMAC_DBG_SEL_MASK 0x000007C0u                // CR_WF_TOP_CMDBT_CTL_LMAC_DBG_SEL[10..6]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_LMAC_DBG_SEL_SHFT 6u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_UMAC_DBG_SEL_SWCTL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_UMAC_DBG_SEL_SWCTL_MASK 0x00000020u                // CR_WF_TOP_CMDBT_CTL_UMAC_DBG_SEL_SWCTL[5]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_UMAC_DBG_SEL_SWCTL_SHFT 5u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_UMAC_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_UMAC_DBG_SEL_MASK 0x0000001Fu                // CR_WF_TOP_CMDBT_CTL_UMAC_DBG_SEL[4..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_1_CR_WF_TOP_CMDBT_CTL_UMAC_DBG_SEL_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_DBG_SEL_2 (0x87002000 + 0xD08u)---

    CR_WF_TOP_CMDBT_CTL_BN3_PHY_DBG_SEL[4..0] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_BN3_PHY_DBG_SEL_SWCTL[5] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_BN2_PHY_DBG_SEL[10..6] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_BN2_PHY_DBG_SEL_SWCTL[11] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_BN1_PHY_DBG_SEL[16..12] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_BN1_PHY_DBG_SEL_SWCTL[17] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_BN0_PHY_DBG_SEL[22..18] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_BN0_PHY_DBG_SEL_SWCTL[23] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_PHY_DBG_SEL[28..24] - (RW)  xxx 
    CR_WF_TOP_CMDBT_CTL_PHY_DBG_SEL_SWCTL[29] - (RW)  xxx 
    RESERVED30[31..30]           - (RO) Reserved bits

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_PHY_DBG_SEL_SWCTL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_PHY_DBG_SEL_SWCTL_MASK 0x20000000u                // CR_WF_TOP_CMDBT_CTL_PHY_DBG_SEL_SWCTL[29]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_PHY_DBG_SEL_SWCTL_SHFT 29u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_PHY_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_PHY_DBG_SEL_MASK 0x1F000000u                // CR_WF_TOP_CMDBT_CTL_PHY_DBG_SEL[28..24]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_PHY_DBG_SEL_SHFT 24u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN0_PHY_DBG_SEL_SWCTL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN0_PHY_DBG_SEL_SWCTL_MASK 0x00800000u                // CR_WF_TOP_CMDBT_CTL_BN0_PHY_DBG_SEL_SWCTL[23]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN0_PHY_DBG_SEL_SWCTL_SHFT 23u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN0_PHY_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN0_PHY_DBG_SEL_MASK 0x007C0000u                // CR_WF_TOP_CMDBT_CTL_BN0_PHY_DBG_SEL[22..18]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN0_PHY_DBG_SEL_SHFT 18u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN1_PHY_DBG_SEL_SWCTL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN1_PHY_DBG_SEL_SWCTL_MASK 0x00020000u                // CR_WF_TOP_CMDBT_CTL_BN1_PHY_DBG_SEL_SWCTL[17]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN1_PHY_DBG_SEL_SWCTL_SHFT 17u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN1_PHY_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN1_PHY_DBG_SEL_MASK 0x0001F000u                // CR_WF_TOP_CMDBT_CTL_BN1_PHY_DBG_SEL[16..12]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN1_PHY_DBG_SEL_SHFT 12u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN2_PHY_DBG_SEL_SWCTL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN2_PHY_DBG_SEL_SWCTL_MASK 0x00000800u                // CR_WF_TOP_CMDBT_CTL_BN2_PHY_DBG_SEL_SWCTL[11]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN2_PHY_DBG_SEL_SWCTL_SHFT 11u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN2_PHY_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN2_PHY_DBG_SEL_MASK 0x000007C0u                // CR_WF_TOP_CMDBT_CTL_BN2_PHY_DBG_SEL[10..6]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN2_PHY_DBG_SEL_SHFT 6u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN3_PHY_DBG_SEL_SWCTL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN3_PHY_DBG_SEL_SWCTL_MASK 0x00000020u                // CR_WF_TOP_CMDBT_CTL_BN3_PHY_DBG_SEL_SWCTL[5]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN3_PHY_DBG_SEL_SWCTL_SHFT 5u
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN3_PHY_DBG_SEL_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN3_PHY_DBG_SEL_MASK 0x0000001Fu                // CR_WF_TOP_CMDBT_CTL_BN3_PHY_DBG_SEL[4..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_DBG_SEL_2_CR_WF_TOP_CMDBT_CTL_BN3_PHY_DBG_SEL_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_VON_DBG_FLAG (0x87002000 + 0xD0Cu)---

    RO_WF_TOP_CMDBT_CTL_VON_DBG_OUT[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_VON_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_VON_DBG_OUT_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_VON_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_VON_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_VON_DBG_OUT_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_VON_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_VON_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_VON_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_MCU_DBG_FLAG (0x87002000 + 0xD10u)---

    RO_WF_TOP_CMDBT_CTL_MCU_DBG_OUT[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_MCU_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_MCU_DBG_OUT_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_MCU_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_MCU_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_MCU_DBG_OUT_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_MCU_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_MCU_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_MCU_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_UMAC_DBG_FLAG (0x87002000 + 0xD14u)---

    RO_WF_TOP_CMDBT_CTL_UMAC_DBG_OUT[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_UMAC_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_UMAC_DBG_OUT_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_UMAC_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_UMAC_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_UMAC_DBG_OUT_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_UMAC_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_UMAC_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_UMAC_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_LMAC_DBG_FLAG (0x87002000 + 0xD18u)---

    RO_WF_TOP_CMDBT_CTL_LMAC_DBG_OUT[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_LMAC_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_LMAC_DBG_OUT_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_LMAC_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_LMAC_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_LMAC_DBG_OUT_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_LMAC_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_LMAC_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_LMAC_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_LIT_DBG_FLAG (0x87002000 + 0xD1Cu)---

    RO_WF_TOP_CMDBT_CTL_LIT_DBG_OUT[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_LIT_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_LIT_DBG_OUT_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_LIT_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_LIT_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_LIT_DBG_OUT_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_LIT_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_LIT_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_LIT_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_FLAG (0x87002000 + 0xD20u)---

    RO_WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_OUT[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_OUT_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_OUT_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_PHY_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_FLAG (0x87002000 + 0xD24u)---

    RO_WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_OUT[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_OUT_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_OUT_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN0_PHY_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_FLAG (0x87002000 + 0xD28u)---

    RO_WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_OUT[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_OUT_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_OUT_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN1_PHY_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_FLAG (0x87002000 + 0xD2Cu)---

    RO_WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_OUT[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_OUT_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_OUT_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN2_PHY_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_FLAG (0x87002000 + 0xD30u)---

    RO_WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_OUT[31..0] - (RO)  xxx 

 =====================================================================================*/
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_OUT_ADDR WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_FLAG_ADDR
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_OUT_MASK 0xFFFFFFFFu                // RO_WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_FLAG_RO_WF_TOP_CMDBT_CTL_SINGLE_BN3_PHY_DBG_OUT_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CFG_VON_DBG_FLAG_CTRL_0 (0x87002000 + 0xF00u)---

    CR_WF_TOP_CFG_VON_DBG_SEL[5..0] - (RW) Internal selection for wf_top_cfg_von debug flag. Affective when CR_WF_TOP_VON_DBG_CTRL_SEL=1'h1
    RESERVED6[30..6]             - (RO) Reserved bits
    CR_WF_TOP_CFG_VON_DBG_CTRL_SEL[31] - (RW) wf_top_cfg_von debug flag control selection
                                     0: selection from HIF (conn_infra)
                                     1: selection from internal CR (CR_WF_TOP_VON_DBG_SEL)

 =====================================================================================*/
#define WF_TOP_CFG_VON_DBG_FLAG_CTRL_0_CR_WF_TOP_CFG_VON_DBG_CTRL_SEL_ADDR WF_TOP_CFG_VON_DBG_FLAG_CTRL_0_ADDR
#define WF_TOP_CFG_VON_DBG_FLAG_CTRL_0_CR_WF_TOP_CFG_VON_DBG_CTRL_SEL_MASK 0x80000000u                // CR_WF_TOP_CFG_VON_DBG_CTRL_SEL[31]
#define WF_TOP_CFG_VON_DBG_FLAG_CTRL_0_CR_WF_TOP_CFG_VON_DBG_CTRL_SEL_SHFT 31u
#define WF_TOP_CFG_VON_DBG_FLAG_CTRL_0_CR_WF_TOP_CFG_VON_DBG_SEL_ADDR WF_TOP_CFG_VON_DBG_FLAG_CTRL_0_ADDR
#define WF_TOP_CFG_VON_DBG_FLAG_CTRL_0_CR_WF_TOP_CFG_VON_DBG_SEL_MASK 0x0000003Fu                // CR_WF_TOP_CFG_VON_DBG_SEL[5..0]
#define WF_TOP_CFG_VON_DBG_FLAG_CTRL_0_CR_WF_TOP_CFG_VON_DBG_SEL_SHFT 0u

/* =====================================================================================

  ---WF_TOP_CFG_VON_DBG_FLAG_0 (0x87002000 + 0xF04u)---

    WF_TOP_CFG_VON_DBG_OUT[31..0] - (RO) wf_top_cfg_von debug flag read

 =====================================================================================*/
#define WF_TOP_CFG_VON_DBG_FLAG_0_WF_TOP_CFG_VON_DBG_OUT_ADDR  WF_TOP_CFG_VON_DBG_FLAG_0_ADDR
#define WF_TOP_CFG_VON_DBG_FLAG_0_WF_TOP_CFG_VON_DBG_OUT_MASK  0xFFFFFFFFu                // WF_TOP_CFG_VON_DBG_OUT[31..0]
#define WF_TOP_CFG_VON_DBG_FLAG_0_WF_TOP_CFG_VON_DBG_OUT_SHFT  0u

#ifdef __cplusplus
}
#endif

#endif // __WF_TOP_CFG_VON_REGS_H__
